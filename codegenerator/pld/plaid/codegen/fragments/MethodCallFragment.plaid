package plaid.codegen.fragments;

state MethodCallFragment {
	method visitMethodCall(node) {
		this.setLocation(node.token);

		val /*ID*/ y = this.y;
		val /*ID*/ o = this.idgen.getId();
		val /*ID*/ m = this.idgen.getId();
		val /*ID*/ a = this.idgen.getId();
		this.out.declareFinalVar(this.out.plaidObjectType, o.name);
		this.out.declareFinalVar(this.out.plaidObjectType, m.name);
		this.out.declareFinalVar(this.out.plaidObjectType, a.name);
		
		// Dereference
		this.y = o;
		node.receiver.accept(this);
		this.out.assignToLookup(m.name, this.jCodeGen.convertOpNames(node.methodName.name), o.name);
		
		// Get arguments
		this.y = a;
		this.foldToPairs(node.arguments).accept(this);
		
		// Call
		this.y = y;
		ifElse (node.isTailCall) {
			this.out.assignToTailCall(y.name, m.name, a.name); 
		} {
			this.out.assignToCall(y.name, m.name, a.name);
		};
	}
}