package plaid.metadataCreation;

import plaid.metadataCreation.Node;
import java.lang.System;

state Tree {

	var root = new Node;
	var targetNode = new plaid.lang.Nil;
	
	/*returns a copy of the tree on which it was called (in which each node is also a copy);targetNode is set equal to the node that corresponds to aNode, the node passed in as a parameter*/
	method copyTree(aNode){
		var newTree = new Tree;
		copyHelper(this.root, newTree.root, aNode, newTree);
		newTree;
	}
	
	method copyHelper(oldTreeNode, currTreeNode, aNode, newTree){
		oldTreeNode.children.map(fn (a) => {
			var newNode = a.copy(currTreeNode);
			this.copyHelper(a,newNode,aNode,newTree);
			if(aNode.tag==a.tag){
				newTree.targetNode = newNode;
			};
		});
	}
	
	method toMetadata(currRoot) {
			var str = "";

			str = str + "new Plaid.metadata.Metadata(";
			str = str + currRoot.toMetadata();
			str = str + ")";

			currRoot.children.map(fn(child) => {
			  str = str + ".addChild(";
				str = str + this.toMetadata(child);
				str = str + ")";
			});

			str;
	}
}
