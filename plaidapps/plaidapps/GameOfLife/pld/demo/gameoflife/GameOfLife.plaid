package demo.gameoflife;

state GameOfLife {
  var board;

	method init() {
	  this.board = new Box { id = "gameBoard"; }  with Board { width = 21; height = 21;};
	  this.board.init();
    this.board <- Glider;

		var buttonStart = new Button{
		  id = "buttonStart";
			onclick = fn()=>{this <- RunningPeriodicalTimer;};
    };
		buttonStart.init();

		var buttonStop = new Button{
		  id = "buttonStop";
			onclick = fn()=>{this <- StoppingPeriodicalTimer;};
	  };
		buttonStop.init();

		var buttonNext = new Button{
		  id = "buttonNext";
			onclick = fn()=>{this.forward();};
		};
		buttonNext.init();
		
    var selectBoard = new DropDownList{
		  id = "selectBoard";
			onchange = fn(evt)=>{
  		  this <- StoppingPeriodicalTimer;
  
  			var v = evt.target.value;
  			if (v == "Glider") { this.board <- Glider; };
  			if (v == "TenCellRow") { this.board <- TenCellRow; };
				if (v == "SmallExploder") { this.board <- SmallExploder; };
				if (v == "Exploder") { this.board <- Exploder; };
				if (v == "Spaceship") { this.board <- Spaceship; };
  		};
		};
		selectBoard.init();
  }

	method forward() {
		this.board.update();
	}
}


method main() {
	if(window.DebugWriter == undefined){
	  window.DebugWriter = new DebugWriter{};
	};

  var game = new GameOfLife{} with PeriodicalTimer{ interval = 500; callback = fn() => { game.forward(); }; };
  game.init();
}

state DebugWriter {
  method write(str) {
	}
}

