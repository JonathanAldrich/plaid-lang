package demo.gameoflife;

state GameOfLife {
  var board;

	method init() {
	  this.board = new Box { id = "gameBoard"; }  with Board { width = 21; height = 21;};
	  this.board.init();
    this.board <- Glider;

		var buttonStart = new Button{
		  id = "buttonStart";
			click = fn()=>{this <- RunningPeriodicalTimer;};
    };
		buttonStart.init();

		var buttonStop = new Button{
		  id = "buttonStop";
			click = fn()=>{this <- StoppingPeriodicalTimer;};
	  };
		buttonStop.init();

		var buttonNext = new Button{
		  id = "buttonNext";
			click = fn()=>{this.forward();};
		};
		buttonNext.init();
		
    var selectBoard = new DropDownList{
		  id = "selectBoard";
			change = fn(evt)=>{
  		  this <- StoppingPeriodicalTimer;
  		};
		};
		selectBoard.init();

		var optionGlider = new Option { name = "Glider"; value = "Glider"; onSelectedOption = fn()=>{ this.board <- Glider; }; };
		optionGlider.init(selectBoard);

		var optionTenCellRow = new Option { name = "TenCellRow"; value = "TenCellRow"; onSelectedOption = fn()=>{ this.board <- TenCellRow; }; };
		optionTenCellRow.init(selectBoard);

		var optionSmallExploder = new Option { name = "SmallExploder"; value = "SmallExploder"; onSelectedOption = fn()=>{ this.board <- SmallExploder; }; };
		optionSmallExploder.init(selectBoard);

		var optionExploder = new Option { name = "Exploder"; value = "Exploder"; onSelectedOption = fn()=>{ this.board <- Exploder; }; };
		optionExploder.init(selectBoard);

		var optionSpaceship = new Option { name = "Spaceship"; value = "Spaceship"; onSelectedOption = fn()=>{ this.board <- Spaceship; }; };
		optionSpaceship.init(selectBoard);

  }

	method forward() {
		this.board.update();
	}
}


method main() {
	if(window.DebugWriter == undefined){
	  window.DebugWriter = new DebugWriter{};
	};

  var game = new GameOfLife{} with PeriodicalTimer{ interval = 500; callback = fn() => { game.forward(); }; };
  game.init();
}

state DebugWriter {
  method write(str) {
	}
}

