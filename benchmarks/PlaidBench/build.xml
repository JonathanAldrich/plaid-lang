<?xml version="1.0" encoding="UTF-8"?>
<project name="plaidjavabench" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <property environment="env"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>


    <!-- Project Libraries -->

    <path id="fastLibs.classpath">
        <pathelement location="${basedir}/../../fastruntime/lib/asm-debug-all-3.3.1.jar"/>
        <pathelement location="${basedir}/../../fastruntime/lib/functionaljava.jar"/>
    </path>

    <path id="library.bin.classpath">
        <pathelement location="${basedir}/../../fastruntime/bin"/>
    </path>

    <path id="library.bin1.classpath">
        <pathelement location="${basedir}/../../faststdlib/bin"/>
    </path>

    <path id="library.bin2.classpath">
        <pathelement location="${basedir}/../../generated/bin"/>
    </path>

    <path id="library.bin3.classpath">
        <pathelement location="${basedir}/../bin"/>
    </path>



    <path id="yourkit.lib.path">
        <pathelement location="C:\Program Files (x86)\YourKit Java Profiler 11.0.1\lib"/>
    </path>

    <target name="set_jav8" depends="jav8_mac,jav8_win,jav8_lin"/>

    <target name="jav8_mac" if="isMac">
        <path id="jav8.classpath">
            <pathelement location="${basedir}/${jav8.mac.path}"/>
        </path>
        <property name="jav8.path" value="${jav8.mac.path}"/>
    </target>
    <target name="jav8_win" if="isWindows">
        <path id="jav8.classpath">
            <pathelement location="${basedir}/${jav8.win.path}"/>
        </path>
        <property name="jav8.path" value="${jav8.win.path}"/>
    </target>
    <target name="jav8_lin" if="isLinux">
        <path id="jav8.classpath">
            <pathelement location="${basedir}/${jav8.linux.path}"/>
        </path>
        <property name="jav8.path" value="${jav8.linux.path}"/>
    </target>

    <condition property="isWindows">
        <os family="windows" />
    </condition>

    <condition property="isLinux">
        <os family="unix" />
    </condition>

    <condition property="isMac">
        <os family="mac" />
    </condition>


    <dirname property="module.plaidbench.basedir" file="${ant.file}"/>

    <property name="compiler.args.plaidbench" value="${compiler.args}"/>

    <property name="plaidbench.output.dir" value="${module.plaidbench.basedir}/bin"/>
    <property name="plaidbench.testoutput.dir" value="${module.plaidbench.basedir}/bin"/>

    <path id="plaidbench.classpath">
        <pathelement location="${plaidbench.output.dir}"/>
        <path refid="jav8.classpath"/>
        <path refid="library.bin.classpath"/>
        <path refid="library.bin1.classpath"/>
        <path refid="library.bin2.classpath"/>
        <path refid="fastLibs.classpath"/>
        <path refid="library.bin3.classpath"/>
        <path refid="yourkit.lib.path"/>
    </path>

    <path id="plaidbench.runtime.classpath">
        <pathelement location="${plaidbench.output.dir}"/>
        <pathelement location="$../../fastruntime/lib/junit-4.10.jar"/>
        <path refid="jav8.classpath"/>
        <path refid="library.bin.classpath"/>
        <path refid="library.bin1.classpath"/>
        <path refid="library.bin2.classpath"/>
        <path refid="fastLibs.classpath"/>
        <path refid="library.bin3.classpath"/>
        <path refid="yourkit.lib.path"/>
    </path>
    <path id="plaidbench.sourcepath">
        <dirset dir="${module.plaidbench.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.plaidbench" depends="compile.module.plaidbench.production,compile.module.plaidbench.tests" description="Compile module PlaidBench"/>

    <target name="compile.module.plaidbench.production" description="Compile module PlaidBench; production classes">
        <mkdir dir="${plaidbench.output.dir}"/>
        <javac destdir="${plaidbench.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.plaidbench}"/>
            <classpath refid="plaidbench.classpath"/>
            <src refid="plaidbench.sourcepath"/>
        </javac>

        <copy todir="${plaidbench.output.dir}">
            <fileset dir="${module.plaidbench.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.plaidbench.tests" depends="compile.module.plaidbench.production" description="compile module PlaidBench; test classes" unless="skip.tests"/>

    <target name="clean.module.plaidbench" description="cleanup module">
        <delete dir="${plaidbench.output.dir}"/>
        <delete dir="${plaidbench.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization" depends="set_jav8">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.plaidbench" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.plaidbench" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.plaidjavabench:jar" value="${basedir}/../../benchmarks"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.PlaidJavaBench.jar" value="${artifacts.temp.dir}/PlaidJavaBench.jar"/>
    </target>

    <target name="artifact.plaidjavabench:jar" depends="init.artifacts, compile.module.plaidbench" description="Build &#39;PlaidJavaBench:jar&#39; artifact">
        <property name="artifact.temp.output.plaidjavabench:jar" value="${artifacts.temp.dir}/PlaidJavaBench_jar"/>
        <mkdir dir="${artifact.temp.output.plaidjavabench:jar}"/>
        <jar destfile="${temp.jar.path.PlaidJavaBench.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset file="${basedir}/src/META-INF/MANIFEST.MF" prefix="META-INF"/>
            <zipfileset dir="${plaidbench.output.dir}"/>
            <zipfileset src="${basedir}/${jav8.path}"/>
        </jar>
        <copy file="${temp.jar.path.PlaidJavaBench.jar}" tofile="${artifact.temp.output.plaidjavabench:jar}/PlaidJavaBench.jar"/>
    </target>

    <target name="build.all.artifacts" depends="artifact.plaidjavabench:jar" description="Build all artifacts">
        <mkdir dir="${artifact.output.plaidjavabench:jar}"/>
        <copy todir="${artifact.output.plaidjavabench:jar}">
            <fileset dir="${artifact.temp.output.plaidjavabench:jar}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>