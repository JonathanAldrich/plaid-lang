package plaid.benchmarks.sorting.StateBST;

state Leaf case of TreePart {
    method add(elem) {
        match ( elem > this.value) {
            case True {
                this <- RightBranch;
                this.right = new Node { var value = elem; } with Leaf with NotRoot { var parent = this; };
            }
            case False {
                this <- LeftBranch; 
                this.left = new Node { var value = elem; } with Leaf with NotRoot { var parent = this; };
            }
        };
    }
    
    method find(elem) {
        match(this.value == elem) {
            case True {
                True;
            }
            case False {
                False;
            }
        }
    }
    
    method delete(elem) {
        match(this.value == elem) {
            case True {
                this.deleteSelf();
            }
            case False {
            }
        }
    }
    
    method deleteSelf() {
        match (this) {
            case Root {
                this.tree.empty();
            }
            case NotRoot {
                this.parent.deleteChild(this);
            }
        }
    }
}