package plaid.benchmatks.sorting.StateBST;

state Node = {
	var value;
} with TreePart with RootType

state TreePart {
	method add(elem);
	method find(elem);
	method delete(elem);
}

state RootType = {}

state Root case of RootType {
	var tree;
}

state NotRoot case of RootType {
	var parent;
}

state BST {
	method add(elem);
}

state EmptyBST case of BST {
	method add(elem) {
		this <- InitBST;
		this.root = new Node { var value = elem; } with Root { var tree = this; } with Leaf;
	}
}

state InitBST case of BST {
	var root = new Leaf { var value = 0; };
	
	method add(elem) {
		this.root.add(elem);
	}
	
	method find(elem) {
		this.root.find(elem);
	}
	
	method delete(elem) {
		this.root.delete(elem);
	}
}

method main() {
	val tstBST = new EmptyBST;
	tstBST.add(10);
	tstBST.add(15);
	tstBST.add(14);
	tstBST.add(5);
	tstBST.add(6);
	tstBST.add(4);
	tstBST.delete(6);
}