/*
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package plaid.typechecker.tests.AEminium;

state Foo <type T, group G, type S> case of Bar<T, immutable Object> {

    group inner;
    group nodes = new group;

    method void foo<group exclusive owner, type T>(shared<owner> Baum z, shared Object uus) [unique  Foo >> immutable Foo x, unique Foo y ]{
        unpackInnerGroups {
            split<this.owner, nodes> {
                val c = new Foo;
                this.value = 0;
                this.noop(a);
                atomic <nodes> {
                    this.fooBar();
                }
            }
        }
    }
    
    val shared<G> Object value;
}
