package plaid.scope;

import plaid.ast.*;
import plaid.ast.types.*;
import plaid.ast.visitor.*;

state LocalScope case of Scope {
	val /*Scope*/ parentScope;
	
	override method lookup(name) {
		ifElse {symbols.containsKey(name)} {
			new Some { val value = symbols.get(name); };
		} {
			parentScope.get(name);
		}
	}
	
	override method printmembers() {
		parentScope.printmembers();
		var iter = symbols.entrySet().iterator();
		while {iter.hasNext(); } {
			var entry = iter.next();
			var name = entry.getKey();
			var symbol = entry.getValue();
			
			java.lang.System.out.print(name);
			java.lang.System.out.print(symbol.toString());
			java.lang.System.out.print(",");
		};
	}
}