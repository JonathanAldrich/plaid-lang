package plaid.ast;

state Application case of Expression {
	val /*Token*/ token;
	val /*Expression*/ f;
	val /*List<Expression>*/ arguments;
	var /*Boolean*/ isTailCall = false;
	
	method accept(v) {
		v.visitApplication(this)
	}
	
	method copy() {
		new Application {
			val /*Token*/ token = this.token;
			val /*Expression*/ f = this.f.copy();
			val /*Expression*/ arguments = this.arguments.map(fn (a) => a.copy());
			override var /*Boolean*/ isTailCall = this.isTailCall;
		}
	}
}