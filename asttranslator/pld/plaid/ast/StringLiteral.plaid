package plaid.ast;

state StringLiteral case of Expression {
	val /*Token*/ token;
	val /*String*/ string;

	method accept(v) {
		v.visitStringLiteral(this)
	}
	
	method copy() {
		new StringLiteral {
			val /*Token*/ token = this.token;
			val /*String*/ string = this.string;
		}
	}
	
	method immutable String toString() [immutable StringLiteral] {
		"STRING(" + this.string + ")"
	}
	
	method immutable Boolean ==(immutable ASTNode other) [immutable StringLiteral] {
		match (other) {
			case StringLiteral {
				this.string == other.string && this.objectType == other.objectType
			}
			default { false }
		}
	}
}