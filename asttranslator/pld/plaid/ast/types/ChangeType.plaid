package plaid.ast.types;

/**
 *	ChangeTypes are just two permTypes.  This is a data structure
 * 	used in the types of methods and lambdas to indicate how the
 *	arguments and receivers change.  There is also a borrowed
 * 	flag which is not currently used as it was moved to the PermType
 *	It should likely be removed and the change in notation in toString
 *	determined based off of the type of the input.
 *	It is currently a case of PlaidType only for purposes of matching on it
 *	this is necessary for a robust == method, but should probably be 
 *	done using a Nominal flag of some kind.
 */
state ChangeType case of PlaidType {
	
	val /*PermType*/ input;
	val /*PermType*/ output;
	val /*Boolean*/ borrow;
	
	method ==(/*ChangeType*/ other) {
		match (other) {
			case ChangeType {
				this.input == other.input && this.output == other.output && this.borrow == other.borrow;
			}
			default { false }
		}
	}
	
	method toString() {
		var ret = input.toString() + " ";
		ifElse ( this.borrow ) 
		 { ret = ret + "><" }
		 { ret = ret + ">>" };
		 ret = ret +  " " + output.toString();
		 ret
	}
}