package plaid.ast.types;

import plaid.ast.types.permissions.*;

/**
 *   function to take the object type from the strongest permission of the pair
 */
val (immutable PermType,immutable PermType) -> void /*unique Option<unique ObjectType>*/ joinPlaidTypes =
	fn (immutable PermType t1,immutable PermType t2) => {
		match (t1.perm) {
			case UniquePermission {
				match (t2.perm) {
					case NonePermission { makeSome(t1.type.copy()) }
					default { new None }
				}
			}
			case ImmutablePermission {
				match (t2.perm) {
					case UniquePermission { new None }
					default { makeSome(t1.type.copy()) }
				}
			}
			case NonePermission {
				makeSome(t2.type.copy())
			}
			default { new None }
		}
	};