package plaid.ast.types;

state StateType {
	val /*List<DeclType>*/ declaredTypes = new List { var head = new Nil; };
	val /*List<DeclType>*/ providedTypes = new List { var head = new Nil; };
	val /*Option StateType*/ superType;
	val /*ID*/ name;
	
	method toString() {
		val pfn = fn (dType) => ret = ret + "\n\t\t" + dType.toString();
		var ret = "state " + this.name.name;
		match(this.superType) {
			case Some { ret = ret + " case of " + superType.value.name.name }
			default { }
		};
		ret = ret + ":\n\tDeclaredType = ";
		declaredTypes.map(pfn);
		ret = ret + "\n\tProvidedType = ";
		providedTypes.map(pfn);
		ret = ret + "\n";		
	}
}