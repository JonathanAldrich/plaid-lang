package plaid.ast;

state LetBinding case of Binding {
	method void toTake()[unique LetBinding >> unique TakeBinding]
		{ this <- TakeBinding } 
	
	method void toBorrow()[unique LetBinding >> unique BorrowBinding]
		{ 	
			this <- BorrowBinding;
			this <- NoLowerBound;
		}
		
	method unique TakeBinding copy() {
		val copy = this.copyBinding();
		copy <- LetBinding;
		copy
	}
	
	method immutable Boolean ==(immutable ASTNode other)[immutable LetBinding] {
		match(other) {
			case LetBinding { this.equalBinding(other) }
			default { false }
		}
	}
	
	method immutable String toString()[immutable TakeBinding] {
		"Let " + this.bindingString()
	}
}