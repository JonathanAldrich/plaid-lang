package plaid.ast.visitor;

state ASTVisitor {
	method visitLetBinding(node);
	method visitTakeBinding(node);
	method visitBorrowBinding(node);
	method visitApplication(node);
	method visitAssignment(node);
	method visitAtomicBlock(node);
	method visitCase(node);
	method visitChangeState(node);
	method visitCompilationUnit(node);
	method visitDeclList(node);
	method visitDereference(node);
	method visitDestructiveDereference(node);
	method visitDoubleLiteral(node);
	method visitFieldDecl(node);
	method visitGroupDecl(node);
	method visitGroupParameter(node);
	method visitID(node);
	method visitImportList(node);
	method visitIntLiteral(node);
	method visitJoin(node);
	method visitLambda(node);
	method visitMatch(node);
	method visitMetaVariable(node);
	method visitMethodCall(node);
	method visitMethodDecl(node);
	method visitNewInstance(node);
	method visitPermType(node);
	method visitQI(node);
	method visitSplitBlock(node);
	method visitsplitPerm(node);
	method visitStateDecl(node);
	method visitStringLiteral(node);
	method visitTyepParameter(node);
	method visitUnitLiteral(node);
	method visitUnpackInnerGroups(node);
	method visitWith(node);
}