package plaid.ast;

state DoubleLiteral case of Expression {
	val /*Token*/ token;
	val /*double*/ double;

	method accept(v) {
		v.visitDoubleLiteral(this)
	}
	
	method copy() {
		new DoubleLiteral {
			val /*Token*/ token = this.token;
			val /*double*/ double = this.double;
		}
	}
	
	method immutable String toString()[immutable DoubleLiteral] {
		"DOUBLE(" + this.double + ")"
	}
	
	method immutable Boolean ==(immutable ASTNode other)[ immutable DoubleLiteral] {
		match (other) {
			case DoubleLiteral {
				this.double == other.double && this.objectType == other.objectType
			}
			default { false }
		}
	}
}