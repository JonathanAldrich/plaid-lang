package plaid.ast;

import java.lang.*;
import java.util.*;

state CompilationUnit case of ASTNode {
	val /*List<Decl>*/ decls;
	val /*List<String>*/ packageName;
	val /*ImportList*/ imports;
	val /*String*/ sourceFile;

	method accept(v) {
		v.visitCompilationUnit(this)
	}
	
	method getPackageString() {
		var packageString = "";
		this.packageName.map(fn (s) => {
			packageString = packageString + s + ".";
		});
		packageString = packageString.substring(0, packageString.length() - 1);
		packageString;
	}
	
	method copy() {
		new CompilationUnit {
			val /*List<Decl>*/ decls = this.decls.map(fn (x) => x.copy());
			val /*List<String>*/ packageName = this.packageName.map(fn (s) => s);
			val /*ImportList*/ imports = this.imports.copy();
			val /*String*/ sourceFile = this.sourceFile;
		}
	}
}