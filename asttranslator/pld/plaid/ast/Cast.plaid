package plaid.ast;

state Cast case of Expression {
	// casts we get from the Java AST will not have ID or start types
	// these will be added when we run typechecking and transform the AST into LNF
	val /*Option ID*/ theVar;
	val /*Option PermType*/ startType;
	val /*PermType*/ resultType;
	val /*Expression*/ body;

	method accept(/*ASTVisitor*/ v) {
		v.visitCast(this);
	}
	
	method copy() {
		val /*ID*/ theVar = this.theVar.copy();
		val /*PermType*/ startType = this.startType;
		val /*PermType*/ resultType = this.resultType;
		val /*Expression*/ body = this.body.copy();
	}
}