package plaid.ast;

state MethodDecl case of ASTNode {
	val /*Token*/ token;
	val /*String*/ name;
	val /*Expression*/ body;
	val /*List<ID>*/ arguments;
	val /*boolean*/ abstractMethod;
	val /*MethodType*/ methodType;

	method accept(v) {
		v.visitMethodDecl(this)
	}
	
	method getName() {
		this.name
	}
	
	method /*boolean*/ hasArg() {
		match (arg) {
			case Some {
				true;
			}
			case None {
				false;
			}
		}
	}	
	
	method copy() {
		new MethodDecl {
			val /*Token*/ token = this.token;
			val /*String*/ name = this.name;
			val /*Expression*/ body = this.body.copy();
			val /*List<ID>*/ arguments = this.arguments.map(fn (a) => a.copy());
			val /*boolean*/ abstractMethod = this.abstractMethod;
			val /*MethodType*/ methodType = this.methodType;
		}
	}
}