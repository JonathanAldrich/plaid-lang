package plaid.ast.tests;

import plaid.ast.visitor.*;

val () -> void translationTests = fn () => {
    //val file = java.io.File.new("testInputs/fibonacci/package.plaid");
    val file = java.io.File.new("testInputs/addFive/package.plaid");
    System.out.println(file.getPath());
    var javaAST = plaid.compilerjava.ParserCore.parse(java.io.FileInputStream.new(file));
	val translator = new ASTTranslator;
	var plaidAST = translator.translateAST(javaAST);

    //val json = plaid.lang.Serialization.toJSON(plaidAST);
    val  obj = createSome("Hello");
    val json = plaid.lang.Serialization.toJSON(obj);
    match (json) {
        case Some {
            System.out.println("JSON: " + json.value);
            val restoredObj = plaid.lang.Serialization.fromJSON(json.value);
            match (restoredObj) {
                case Some {
                    System.out.println("Successfully convert object back from JSON.");
                }
                case None {
                    System.out.println("Failed to convert object back from JSON.");
                }
            };
        }
        case None {
            System.out.println("Failed to convert to JSON.");
        }
    };
    //System.out.println(json);
    //val file = java.io.FileWriter.new("AST.json");    
    //file.write(json);
    //file.close();

    //val reconAST = plaid.lang.Serialization.fromJSON(json);

    plaidAST.accept(new PrintVisitor);
    //reconAST.accept(new ASTViewer);
};