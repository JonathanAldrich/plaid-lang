Plaid ideas inspired by Smalltalk
---------------------------------

Dynamism - need dynamic compiler
Simplicity - how small can we make it?
Everything is an object - make the run-time more reflective
Whiz-bang - provide a cool interface
Declarative - good declarative syntax support
Composition - need better story for code reuse


Getting there from here:
 - clear dynamic semantics & complete compilation strategy
	based on VM design, below
	based on everything an object, below
	tail calls
		semantics: applies only to tail call to the same function name
		opt: if we can prove it's recursive compile as a loop
			this happens if no dispatch, or if imm perm to this & call this again
		otherwise, first call is normal
		opt: recursive call checks if same impl, goes into loop in that case
		if other impl, calls special tail version (if available)
			if not available, recursion depth limited to 2
			if available, tail version returns ptr of what to call next (if any)
 - clean Plaid VM
	minimal, self-contained Java runtime system
		runs on JVM + Android
	execute on Plaid file
	can spit out an executable (including, recursively, the VM itself)
		specify "main object/function"
		compiler does equiv. of dynamic compilation to Java for everything it
			depends on
	dynamic compilation
 - interface library
 - interpretive interface
 - seamless interop with Java
	efficiently invoking Java from Plaid
	allowing Plaid objects to implement Java interfaces
	embedding Java code into Plaid code
 - make everything an object - packages, etc.
	(don't worry about parameterization for now)
	put the run-time system more in Plaid!

