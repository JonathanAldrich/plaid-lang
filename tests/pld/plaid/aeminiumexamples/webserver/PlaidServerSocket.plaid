package plaid.aeminiumexamples.webserver;

import java.lang.System;
import java.net.ServerSocket;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.InputStreamReader;


state PlaidServerSocket {
    @sequential
    val ss = ServerSocket.new(8000);

	@sequential
	method void LOG(immutable String msg)  [immutable WebServer this]  {
		System.out.println("LOG: " + msg);
	}

    @sequential
    method unique Socket accept() {
        this.LOG("accept new connection");
        val client = this.ss.accept();
        
        val inputReader = InputStreamReader.new(client.getInputStream());
        val reader = BufferedReader.new(inputReader);
        
        val outputWriter = OutputStreamWriter.new(client.getOutputStream());
        val writer = BufferedWriter.new(outputWriter);

        //new Socket { val socket = client; val reader = reader; val writer = writer; }
        val skt = new Socket;
        skt.socket = client;
        skt.reader = reader;
        skt.writer = writer;
        skt;
    }
}