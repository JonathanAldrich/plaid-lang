package plaid.fastexamples.javaInterop;

import java.lang.System;
import java.util.ArrayList;
import java.lang.Float;
import java.lang.Long;

method Boxing() {

	//boolean boxing
	val list = ArrayList.new();
	match ( list.isEmpty() ) {
		case True { 
			System.out.println("bool");
		}
		case False {
			System.out.println("bool failed");
		}
	};
	
	//numeric boxing
	val number = Float.new(5.5);
	match ( number.doubleValue() == 5.5) {
		case True { 
			System.out.println("double");
		}
		case False {
			System.out.println("double failed");
		}
	};
	match ( number.floatValue() == 5.5) {
		case True { 
			System.out.println("float");
		}
		case False {
			System.out.println("float failed");
		}
	};
	match ( number.longValue() == 5) {
		case True { 
			System.out.println("long");
		}
		case False {
			System.out.println("long failed");
		}
	};
	match ( number.intValue() == 5) {
		case True { 
			System.out.println("int");
		}
		case False {
			System.out.println("int failed");
		}
	};
	match ( number.shortValue() == 5) {
		case True { 
			System.out.println("short");
		}
		case False {
			System.out.println("short failed");
		}
	};
	match ( number.byteValue() == 5) {
		case True { 
			System.out.println("byte");
		}
		case False {
			System.out.println("byte failed");
		}
	};
	
	//long looses precision:
	val theLong = Long.MAX_VALUE;
	match ( theLong.longValue() == -1 ) {
		case True { 
			System.out.println("long truncated");
		}
		case False {
			System.out.println("long no longer truncated - update language");
		}
	};
	
	//character boxing
	val s = "character test";
	match (s.charAt(0) == "c") {
		case True { 
			System.out.println("char");
		}
		case False {
			System.out.println("char failed");
		}
	};	
	
}