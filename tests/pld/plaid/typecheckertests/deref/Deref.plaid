package plaid.typecheckertests.deref;

state DerefErrors {

    val immutable FieldState f = new FieldState;
    
    //splitting fails
    method unique FieldState test()[unique DerefErrors this] {
        this.f;
    }
    
    //deref method
    //method immutable String test1()[unique DerefErrors this] {
    //    this.test;
    //}
    
    //deref missing member
    //method immutable String test2()[unique DerefErrors this] {
    //    this.noField
    //}
    
    //chained derefs - eventually may implement - move to success when so
    method immutable String test3()[unique DerefErrors this] {
        this.f.s;
    }
    
    //deref succeed
    method immutable FieldState test4()[unique DerefErrors this] {
        this.f;
    }

}