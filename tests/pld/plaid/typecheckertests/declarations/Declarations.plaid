package plaid.typecheckertests.declarations;

state Declarations {
    
    //wrong struct
    val immutable Integer i = "foo";
    
    //env variable not present
    method immutable String test()[immutable String s] {
        s;
    }
    
    //this has wrong structure
    method void test1()[unique OtherState this] {
        unit;
    }
    
    //multiple arguments with same name
    method void test2(immutable String x)[immutable Integer x] {
        unit;
    }
    
    //succeeds - environment
    method unique OtherState test3(immutable String x) {
        new OtherState { 
            method void m()[unique OtherState this, immutable String x] {
                val immutable String temp = x;
                unit;
            }
        }
    }
    
    //fails environment permission change
    method unique OtherState test4() {
        val unique AnotherState x = new AnotherState;
        new OtherState {
            method void m()[unique OtherState this, unique AnotherState >> immutable AnotherState x] {
                val immutable AnotherState t = x;
                unit;
            }
        }
    }

    //fails environment permission not enough at end
    method unique OtherState test4a() {
        val unique AnotherState x = new AnotherState;
        new OtherState{
            method void m()[unique OtherState this, unique AnotherState x] {
                val immutable AnotherState t = x;
                unit;
            }
        }
    }

    //fails environment state change
    method unique OtherState test5() {
        val unique AnotherState x = new AnotherState;
        new OtherState{
            method void m()[unique OtherState this, unique AnotherState >> unique String x] {
                x.changeToString();
            }
        }
    }
    
    //succeeds environment state change
    method unique OtherState test6() {
        val unique AnotherState x = new AnotherState;
        new OtherState{
            method void m()[unique OtherState this, unique AnotherState >> unique AnotherSubState x] {
                x.changeToSub();
            }
        }
    }
    
    //fail environment not enough permissions
    method unique OtherState test7() {
        val immutable AnotherSubState x = new AnotherSubState;
        new OtherState{
            method void m()[unique OtherState this, unique AnotherSubState x] {
                x.changeToSub();
            }
        }
    }
    
    //fail typechecking inner method body
    method unique OtherState test8() {
        val immutable AnotherSubState x = new AnotherSubState;
        new OtherState{
            method void m()[unique OtherState this, immutable AnotherSubState x] {
                x.changeToSub();
            }
        }
    }
    
    //return structure wrong
    method immutable String test9() {
        5
    }
    
    //end types of inputs wrong wrong
    method void test10(unique OtherState x)[unique Declarations this] {
        this <<- AnotherState;
        val immutable OtherState t1 = x;
    }
    
    //successful call to package-level method
    method void test11() {
    	packageMethodSucceed();
    }
    
}