package plaid.typecheckertests.assignment;

state Assignment {
    val immutable String f = "foo";
    var unique FieldState g = new FieldState;
    var immutable FieldState h = new FieldState;
    //val () -> void func = fn () => unit;

    //cannot assign to a local val
    method void test(unique Assignment >> void x)
        [unique Assignment this]
    {
        val unique Assignment l = new Assignment;
        l = x;
    }
    
    //wrong structure for a local var assignment
    //may not be supporting, not tested for now
    //method void test1(immutable String s) [unique Assignment this]{
    //    var immutable FieldState t = new FieldState;
    //    t = s;
    //}
    
    //cannot assign to a val field
    method void test2(immutable String s) [unique Assignment this]{
        this.f = s;
    }
    
    //wrong structure for field
    method void test3(unique NotFieldState nfs) [unique Assignment this]{
        this.g = nfs;
    }
    
    //not enough permission for field
    method void test4(immutable FieldState fs) [unique Assignment this]{
        this.g = fs;
    }
    
    //cannot assign to a parameter
    method void test5(immutable Assignment x) [unique Assignment this]{
        x = new Assignment;
    }
    
    //cannot assign to a local that does not exist
    //probably a name-resolution error
    //method void test6(immutable String s) [unique Assignment this]{
    //   l = s;
    //}
    
    //cannot assign to a method of an object
    method void test7(immutable String s) [unique Assignment this]{
        this.test = s;
    }
    
    //cannot assign to a non-existant field
    method void test8(immutable Integer i) [unique Assignment this]{
        this.nonField = i;
    }
    
    //cannot assign to field of an not-in-scope variable
    //probably a name-resolution error
    //method void test9(immutable Integer i) [unique Assignment this]{
    //    j.f = i;
    //}
    
    //lambdas do not have fields - add back when lambdas implemented
    //method void test10(immutable Integer i) [unique Assignment this]{
    //    func.f = i;
    //}
    
    //assignments can only be given permission none
    // fails at type resolution
    //method void test11(unique FieldState fs) [unique Assignment this]{
    //    val immutable Integer t = (this.g = fs);
    //}
    
    //cannot assign to a field of a field
    method void test12(unique FieldState fs)[unique Assignment this] {
        this.g.s = fs;
    }
    
    //assign packed field - succeed
    method void test13()[unique Assignment this] {
        this.h = new FieldState;
    }
    
    //unpack and then repack- succeed
    method void test14()[unique Assignment this] {
        this.h = this.g;
        this.g = new FieldState;
    }
    
    method void test15()[unique Assignment this] {
        this.h = new FieldSubState;
    }
    
}