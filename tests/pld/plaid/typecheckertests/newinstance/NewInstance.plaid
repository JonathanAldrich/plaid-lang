package plaid.typecheckertests.newinstance;

state NewInstance {

    //succeed
    method unique NewState test() {
        new NewState { 
            val immutable String f = "foo";
            method void m() { unit }
        };
    }   

    //fail - wrong number of specializations
    method unique NewState test1() {
        new NewState;
    }
    
    //fail - f not concrete
    method unique NewState test2() {
        new NewState { 
            val immutable String f = "foo";
            val immutable String g = "bar";
        };
    }
    
    //fail - m not a method
    method unique NewState test3() {
        new NewState { 
            val immutable String f = "foo";
            val immutable String m = "bar";
        };
    }
    
    //fail - f not a field
    method unique NewState test4() {
        new NewState { 
            method void f() { unit }
            method void m() { unit }
        };
    }
    
    //fail - f sig wrong
    method unique NewState test5() {
        new NewState { 
            val immutable Integer f = 5;
            method void m() { unit }
        };
    }
    
    //fail - f typechecking fails
    method unique NewState test6() {
        new NewState { 
            val immutable String f = 5;
            method void m() { unit }
        };
    }
    
    //fail - f typechecking fails
    method unique NewState test7() {
        new NewState { 
            val immutable String f = "foo" + 5;
            method void m() { unit }
        };
    }
    
    //fail - m sig wrong
    method unique NewState test8() {
        new NewState { 
            val immutable String f = "foo";
            method void m(unique NewState x) { unit }
        };
    }
    
    //fail - m typecheck fails
    method unique NewState test8() {
        new NewState { 
            val immutable String f = "foo";
            method void m() { 
                val immutable String s = 5;
                unit;
            }
        };
    }
    
    //fail - f still abstract
    method unique NewState test10() {
        new NewState { 
            val immutable String f;
            method void m() { unit }
        };
    }
    
    //fail - m still abstract
    method unique NewState test11() {
        new NewState { 
            val immutable String f = "foo";
            method void m();
        };
    }
    
    //fail - new non-state - wait for name resolution
    //method void test12(unique String x) {
      //  new x;
    //}
}