package plaid.typecheckertests.lambdas;

state Lambdas {

    //basic - succeed
    val () -> void f1 = fn() : void => unit;
    
    //param - succeed
    val (immutable Integer) -> immutable Integer f2 = 
        fn(immutable Integer x) : immutable Integer => x;
        
    //param change succeed
    val (unique Lambdas >> immutable Lambdas) -> immutable Lambdas f3 =
        fn (unique Lambdas >> immutable Lambdas x) : immutable Lambdas => { x };
        
    //param change fail
    val (unique Lambdas) -> immutable Lambdas f4 =
        fn (unique Lambdas x) : immutable Lambdas => { x };
        
    //error in body
    val (unique Lambdas) -> immutable Lambdas f5 =
        fn (unique Lambdas x) : immutable Lambdas => { 
            val immutable Integer y = x;    
    };
    
    //environment pulls too much - fail
    val (unique Lambdas) -> () -> void f6 =
        fn (unique Lambdas x) : () -> void => { 
             fn ()[unique Lambdas x] : () -> void => { val unique Lambdas y = x }
    };
    
    //environment fail
    val (unique Lambdas) -> () -> void f7 =
        fn (unique Lambdas x) : () -> void => { 
             val (unique Lambdas >> immutable Lambdas) -> immutable Lambdas f = x.f3;
             fn ()[unique Lambdas x, 
                   (unique Lambdas >> immutable Lambdas) -> immutable Lambdas f
                  ]: () -> void => { val immutable Lambdas t = f(x) }
    };
    
    

}