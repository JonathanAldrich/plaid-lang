package plaid.aeminium.codegen;

import plaid.ast.visitor.ASTViewer;
import plaid.aeminium.codegen.testcases.ParallelCalls;
import plaid.aeminium.codegen.testcases.SplitJoin;
import plaid.aeminium.codegen.testcases.Fibonacci;
import plaid.aeminium.codegen.testcases.LambdaTest;
import plaid.aeminium.codegen.testcases.Histogram;
import plaid.aeminium.codegen.testcases.FibonacciMatch;

method main() {
	val testCase = new FibonacciMatch;
	
	val myAST = testCase.getAST();
	val myMethodTypes = testCase.getMethodTypes();
	
	myAST.accept(new ASTViewer);
	
	val depAnalysis = new DependencyAnalysisVisitor { val methodTypes = myMethodTypes; };
	myAST.accept(depAnalysis);
	
	/*
	val codeGen = new AeminiumCodeGenVisitor;
	myAST.accept(codeGen);
	*/
}