package plaid.examples.simpleDataflow;

state Object {
    val immutable String name;
}

state SimpleDataflow {
    @sequential
    method void f1(unique Object o1) [ immutable SimpleDataflow this ] { java.lang.System.out.println("f1(" + o1 .name + ")"); }
    @sequential
    method void f2(unique Object o1, unique Object o2) [ immutable SimpleDataflow this ] { java.lang.System.out.println("f1(" + o1 .name + "," + o2.name + ")"); }
    @sequential
    method void f3(unique Object o1, unique Object o2, unique Object o3) [ immutable SimpleDataflow this ] { java.lang.System.out.println("f1(" + o1 .name + "," + o2.name + "," + o3.name + ")");}

    method void start(unique Object a,
                      unique Object b,
                      unique Object c) [ immutable SimpleDataflow this ] {
         this.f1(a);
         this.f1(b);
         this.f1(c);  
         
         this.f2(a,b);
         this.f2(b,c);
         
         this.f3(a,b,c);         
    }
}

method void main() {
    val unique Object o1 = new Object { val immutable String name = "o1"; };
    val unique Object o2 = new Object { val immutable String name = "o2"; };
    val unique Object o3 = new Object { val immutable String name = "o3"; };
    val unique SimpleDataflow sd = new SimpleDataflow;
    
    sd.start(o1, o2, o3);
}