package plaid.examples.lib.hashmap.global;

import plaid.arrays.GlobalSharedArray;
import plaid.arrays.makeGlobalSharedArray;
import plaid.examples.lib.hashmap.Hashmap;

/********************************************************************************
 ** factory methods 
 *******************************************************************************/

@sequential
method unique Hashmap makeGlobalHashmap(immutable Integer order) {
    val immutable Integer bucketCount = 1 << order;
    val immutable GlobalHashmapOperations addOps = new GlobalHashmapAddOperations;
    val immutable GlobalHashmapOperations containsOps = new GlobalHashmapContainsOperations;
    val unique GlobalSharedArray sa = makeGlobalSharedArray(order);
    sa.initialize(addOps);
    new GlobalHashmap { 
        val immutable Integer bucketCount = bucketCount;
        val immutable GlobalHashmapOperations addOps = addOps; 
        val immutable GlobalHashmapOperations containsOps = containsOps; 
        val unique GlobalSharedArray buckets = sa;
    }
}