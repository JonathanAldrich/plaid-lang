package plaid.examples.lib.hashtable.global;

import plaid.examples.lib.hashtable.Hashable;

state BucketList{
    var shared ?BucketList next = unit;
    
    var immutable ?Hashable data = unit;
    
    method immutable Boolean contains(immutable Integer objHash) [ shared BucketList this ] {
        val immutable ?Hashable obj = atomic { this.data };
        val immutable Integer thisHash = match (obj ) {
            case Hashable {  obj.hash() }
            default { 0 }
        };
        //printLine("[BucketList] containsProtected(" + objHash.toString() + ") with current " + thisHash.toString());
        val immutable Boolean found = thisHash == objHash;

        atomic {        
            match ( found ) {
                case True {
                    //printLine("[BucketList]     found element."); 
                    found 
                }
                case False {
                    val shared ?BucketList next = this.next;
                    match ( next ) {
                        case BucketList { 
                            //printLine("[BucketList]     search rest of list."); 
                            next.contains(objHash);
                        }
                        default { 
                            //printLine("[BucketList]     end of list."); 
                            found 
                        }
                    }
                }
            }
        }
    }
}