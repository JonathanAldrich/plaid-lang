package plaid.examples.lib.hashtable.global;

import plaid.examples.lib.hashtable.Hashable;

state BucketList{
    var shared ?BucketList next = unit;
    
    val immutable Hashable data;
    
    method immutable Boolean contains(immutable Integer objHash) [ shared BucketList this ] {
        val immutable Integer thisHash = this.data.hash();
        printLine("[BucketList] containsProtected(" + objHash.toString() + ") with current " + thisHash.toString());
        val immutable Boolean found = thisHash == objHash;

atomic {        
        match ( found ) {
            case True { printLine("[BucketList]     found element."); found }
            case False {
                val shared ?BucketList next = this.next;
                match ( next ) {
                    case BucketList { 
                        printLine("[BucketList]     search rest of list."); 
                            next.contains(objHash);
                    }
                    default { printLine("[BucketList]     end of list."); found }
                }
            }
        }
}
    }
}