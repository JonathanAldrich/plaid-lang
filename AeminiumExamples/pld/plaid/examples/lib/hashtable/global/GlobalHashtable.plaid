package plaid.examples.lib.hashtable.global;

import plaid.examples.lib.hashtable.Hashable;
import plaid.examples.lib.hashtable.Hashtable;

state GlobalHashtable case of Hashtable {
    
    // buckets tree itself
    val shared Bucket buckets;
 
    override method void addUnique(immutable Hashable obj) [ unique GlobalHashtable this ] {
        //printLine("[GlobalHashtable] addUnique");
        val shared Bucket bs = this.buckets;
        val immutable Integer hashCode = obj.hash();
        bs.add(obj, hashCode);
    }
       
    override method void addShared(immutable Hashable obj) [ local shared GlobalHashtable this ] {
        //printLine("[GlobalHashtable] addShared");
        val shared Bucket bs = this.buckets;
        val immutable Integer hashCode = obj.hash();
        bs.add(obj, hashCode);
    }
    
    override method immutable Boolean containsShared(immutable Hashable obj)  [ local shared GlobalHashtable this ] {
        //printLine("[GlobalHashtable] containsShared");
        val shared Bucket bs = this.buckets;
        val immutable Integer hashCode = obj.hash();
        bs.contains(obj, hashCode);
    }
    
    override method immutable Boolean containsUnique(immutable Hashable obj)  [ unique GlobalHashtable this ] {
        //printLine("[GlobalHashtable] containsUnique");
        val shared Bucket bs = this.buckets;
        val immutable Integer hashCode = obj.hash();
        bs.contains(obj, hashCode);
    }
}