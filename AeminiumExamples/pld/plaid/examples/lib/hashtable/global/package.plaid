package plaid.examples.lib.hashtable.global;

import plaid.examples.lib.hashtable.Hashtable;

/********************************************************************************
 ** helper functions
 *******************************************************************************/

@cheap
@sequential
method unique Bucket createBuckets(immutable Integer order) {
    val immutable Boolean isZero = (order == 0);
    match ( isZero ) {
        case True { new LeafBucket }
        default { 
            val immutable Integer nextOrder = order - 1;
            new NodeBucket {
                val immutable Integer decissionBit = nextOrder;
                val shared Bucket smallerBuckets = createBuckets(nextOrder);
                val shared Bucket biggerBuckets  = createBuckets(nextOrder);
            }
        }
    }
}


/********************************************************************************
 ** factory methods 
 *******************************************************************************/

@sequential
method unique Hashtable makeGlobalHashtable(immutable Integer order) {
    new GlobalHashtable { val unique Bucket buckets = createBuckets(order); } 
}