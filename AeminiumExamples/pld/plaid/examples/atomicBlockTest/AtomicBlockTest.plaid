package plaid.examples.atomicBlockTest;

state AtomicBlockTest {
    var immutable Integer value = 0;
    
    @sequential
    method void printValue() [ unique AtomicBlockTest this ] {
        java.lang.System.out.println("value = " + this.value.toString());
    }
    
    method void incAndDec(immutable Integer level) [ local shared AtomicBlockTest this ] {
        val immutable Integer nextLevel = level - 1;
        
        val immutable Boolean stop = nextLevel == 0;
        
        match ( stop ) {
            case True { 
                /* noop */
            }
            case False {
                this.inc(nextLevel);
                this.dec(nextLevel);
            }
        }
    }
    
    
    method void inc(immutable Integer level) [ local shared AtomicBlockTest this ] {
        atomic { 
            this.value = this.value + 1;
        }
    }

    method void dec(immutable Integer level) [ local shared AtomicBlockTest this ] {
        atomic { 
            this.value = this.value - 1;
        }
    }
}