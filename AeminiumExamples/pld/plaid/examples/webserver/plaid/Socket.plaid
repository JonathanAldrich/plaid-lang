package plaid.examples.webserver.plaid;

state Socket {
    val socket;
    val inputReader;
    val outputStream;
    
    @sequential
    method immutable ?String readLine() [unique Socket this] {        
        this.inputReader.readLine();
    }
    
    @sequential 
    method void writeLine(immutable String msg) [unique Socket this] {
        this.outputStream.write((msg + "\n").getBytes());
    }
    
    @sequential 
    method void flush() [unique Socket this] {
        this.outputStream.flush();
    }
    
    @sequential 
    method void close() [unique Socket this]  {
       this.socket.close();
    }
    
    @sequential
    method void copyFileToSocket(file) [immutable Socket this]  {
        val is = java.io.BufferedInputStream.new(java.io.FileInputStream.new(file));
        plaid.examples.webserver.java.Webserver.copyFileToSocket(this.outputStream, is);
    }
}