package plaid.compiler.passes;

import plaid.compiler.Pass;
import plaid.compiler.Reporter;
import plaid.ast.parsed.*;

state ASTViewerPass case of Pass {
    var immutable String titlePrefix = "";

    method immutable Boolean run(unique Job job) {
        match (job.ast) {
            case Some {
                DEBUG(DEBUG_PRIO_HIGH, "<ASTViewerPass> started for file " + job.source.path);
                val viewer = new ParsedASTViewerVisitor{ override val title = this.titlePrefix + job.source.path ;};
                job.ast.value.accept(viewer);

                // val rewritten = job.ast.value.rewrite(new ParsedRewriteLeafVisitor);
                // val viewer2 = new ParsedASTViewerVisitor{ override val title = this.titlePrefix + job.source.path + "[COPY]" ;};
                // rewritten.accept(viewer2);
                DEBUG(DEBUG_PRIO_HIGH, "<ASTViewerPass> finished for file " + job.source.path);
                true
            }
            default { false }
        }
    }
}