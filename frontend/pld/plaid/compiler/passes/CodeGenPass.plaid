package plaid.compiler.passes;

import plaid.compiler.Pass;
import plaid.compiler.Reporter;
import plaid.fastcodegen.CodeGenVisitor;
import plaid.ast.parsed.*;

state CodeGenPass case of Pass {
    var immutable String titlePrefix = "";

    method immutable Boolean run(unique Job job) {
        match (job.ast) {
            case Some {
                DEBUG(DEBUG_PRIO_HIGH, "<CodeGenPass> started");
                val codeGenerator = new CodeGenVisitor;
                job.ast.value.accept(codeGenerator);
                DEBUG(DEBUG_PRIO_HIGH, "<CodeGenPass> finished");
                true
            }
            default { false }
        }
    }
}