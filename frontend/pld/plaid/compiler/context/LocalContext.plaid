package plaid.compiler.context;

import plaid.compiler.Context;

import java.util.HashMap;
import java.util.Map;


state LocalContext case of Context {
    
    val unique Map map = HashMap.new();
    val shared Context parent;
    
    method immutable Boolean put(immutable String name, shared Symbol symbol) {
        ifElse ( !map.containsKey(name) ) {
            map.put(name, symbol);      
            true
        }{
            false
        }
    }
    
    method find(name) {
        match(map.containsKey(name)) {
            case True  { createSome(map.get(name)); }
            case False { parent.find(name); }
        }
    }

    method shared Option findInSymbol(symbol, name) {
        parent.findInSymbol(symbol, name);
    }
}