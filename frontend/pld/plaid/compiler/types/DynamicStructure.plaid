package plaid.compiler.types;

import plaid.compiler.Structure;
        
state DynamicStructure case of Structure {

  method immutable Boolean ==(immutable Structure other)[immutable Structure this] {
    match (other) {
      case DynamicStructure { true }
      default { false }
    }
  }
  
  method immutable String toString() {
    "Dynamic"
  }
  
  /**
   * Dynamic is outside the substructure hierarchy for now - false
   */
  method immutable Boolean isSubStructureOf(immutable Structure other)[immutable DynamicStructure this] {
    false
  }
  
  /**
   * Dynamic structures do not have least upper bounds
   */
  method unique Option<immutable Structure> leastUpperBound(immutable Structure other)[immutable DynamicStructure this] {
    match (other) {
      case DynamicStructure { makeSome(DYNAMICSTRUCT) }
      default { new None }
    }
  }

}