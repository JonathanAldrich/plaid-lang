package plaid.compiler.types;

import plaid.compiler.*;
import plaid.compiler.symbol.*;

state NominalStructure case of ObjectStructure {
    val shared StateSymbol symbol;
    val immutable Type owner;
    val immutable String name;

    method immutable Signature getMember(immutable String name) {
        DEBUG(DEBUG_PRIO_MEDIUM, "<NominalStructure> searching for '"+name+"' in '" + this.symbol.getFQN() + "'");
        val memberSymbol = this.symbol.getMember(name);
        match (memberSymbol) {
            case Some {
                match (memberSymbol.value) {
                    case FieldSymbol {
                        DEBUG(DEBUG_PRIO_MEDIUM, "<NominalStructure>   found FieldSymol for '"+name+"'");
                        memberSymbol.value.getSignature();
                    }
                    case MethodSymbol {
                        DEBUG(DEBUG_PRIO_MEDIUM, "<NominalStructure>   found MethodSymol for '"+name+"'");
                        memberSymbol.value.getSignature();
                    }
                    default {
                        ABORT("Unsupported member type ");
                    }
                }
            }
            case None {
                ABORT("Cannot find member '"+name+"' in '" + this.symbol.getFQN() + "'");
            }
        }
    }
}