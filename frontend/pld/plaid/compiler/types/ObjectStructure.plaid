package plaid.compiler.types;

import plaid.compiler.*;
import plaid.ast.util.Token;

state ObjectStructure case of Structure {

  /**
   *  returns the name of the underlying nominal type, whether packed or unpacked
   */
  method immutable String getName();

  /**
   *  returns None if the member is not defined for this type or the current signature representing
   *  the member if it is defined as a method or field.
   *  Preconditions:
   *    None
   *  Errors:
   *    None
   */
  method unique Option<immutable Signature> getMember(immutable String memberName);
  
  /**
   *  -Returning to a Packed Field: Since the structure is packed, then we know
   *  one of several things about the field
   *    A) the field was packed when reassigned, OR
   *    B) pulling the permission did not unpack the field, OR
   *    C) the object changed to a different state which removes or packs the field
   *  Thus, the field may or may not still be present in the object and no action is needed.
   *  -Returning to an unpacked Field: If fieldName is in the list of unpacked field, 
   *   then retType is returned to it, assuming the object IDs match. 
   *  Preconditions:
   *    None
   *  Errors:
   *    None
   */
  method immutable ?ObjectStructure restoreToField(immutable String fieldName, immutable Type retType, immutable Integer objectID);
  
  /**
   * unpacking assumes that the calculation of the updated permissions has already occurred and that
   * it was legal.  An unpacked structure including the newly unpacked field is returned
   *  Preconditions:
   *    fieldName is a member of this type and is a field
   *  Errors:
   *    if precondition not met, then ABORT will be called
   */
  method immutable ?UnpackedStructure unpackField(immutable UnpackedFieldSignature newFieldSig,
                                                 immutable Token errorToken);
  
  /**
   *  if fieldName is packed, then assignment is a no-op
   *  if fieldName is an unpacked field, then that field is removed from the
   *    list of unpacked fields.  If this removes the last field from the list
   *    then the packed structure is returned, otherwise an unpacked structure with
   *    the remaining unpacked fields is returned
   *  Preconditions:
   *    fieldName is a member of this type and is a field
   *  Errors:
   *    if precondition not met, then ABORT will be called
   */
  method immutable ?ObjectStructure assignToField(immutable String fieldName,
  												 immutable Token errorToken);
}