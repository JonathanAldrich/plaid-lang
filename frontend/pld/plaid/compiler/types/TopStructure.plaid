package plaid.compiler.types;

import plaid.compiler.Structure;

state TopStructure case of Structure {

  method immutable Boolean ==(immutable Structure other)[immutable TopStructure this] {
    match (other) {
      case TopStructure { true }
      default { false }
    } 
  }
  
  method immutable String toString() {
    "TOP"
  }
  
  /**
   * Top is a substructure only of Top
   */
  method immutable Boolean isSubStructureOf(immutable Structure other)[immutable TopStructure this] {
    match (other) {
      case TopStructure { true }
      default { false }
    }
  }

  /**
   *  Top structure lub defined as itself for another top structure or a nominal structure, undefined otherwise
   */
  method unique Option<immutable Structure> leastUpperBound(immutable Structure other)[immutable TopStructure this] {
    match (other) {
      case TopStructure { makeSome(TOPSTRUCT) }
      case NominalStructure { makeSome(TOPSTRUCT) }
      default { new None }
    } 
  }
}