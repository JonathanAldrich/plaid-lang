package plaid.compiler.types;

import plaid.compiler.*;

state NominalPlaidType case of StatePlaidType {
    val shared StateSymbol symbol;
    val immutable PlaidType owner;

    method immutable PlaidType getMemberType(immutable String name) {
        DEBUG(DEBUG_PRIO_LOW, "<NominalPlaidType> find member '" + name + "' in NominalPlaidType '" + this.symbol.getFQN() + "'" );
        val memberSymbol = this.symbol.getMember(name);
        match (memberSymbol) {
            case Some {
                memberSymbol.value.getType();
            }
            case None {
                ERROR("<NominalPlaidType> state '" + this.symbol.getFQN() + "'  has no member '" + name +"'");
            }
        }
    }
}