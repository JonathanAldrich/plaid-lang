package plaid.compiler.types;

import plaid.compiler.Type;

state FieldSignature case of Signature {
    val immutable Boolean isVar;
    val immutable Type fieldType;
    val immutable String name;

    method immutable Type getFieldType() {
        this.fieldType
    }
    
    method immutable Boolean ==(immutable Signature other)[immutable FieldSignature this] {
      match (other) {
        case FieldSignature {
          this.isVar == other.isVar &&
          this.fieldType == other.fieldType &&
          this.name.equals(other.name)
        }
        default { false } 
      }
    }
    
    method immutable String toString()[immutable FieldSignature this] {
      val specifier = match (this.isVar) {
        case True { "var " }
        case False { "val " }
      };
      specifier + fieldType.toString() + " " + name + ";"
    }
}