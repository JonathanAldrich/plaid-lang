package plaid.compiler.tests;

import plaid.ast.parsed.*;
import plaid.compiler.*;
import plaid.compiler.symbol.*;
import plaid.compiler.types.*;
import plaid.compiler.typecheckerUtil.*;

import plaid.collections.makeLinkedList;

/**
 *  Manually built AST for a compiler run
 *  Used in tests
 */
state ASTsForTests {

  /*************************************
  **************************************
          AST FIELD DECLARATIONS
  **************************************
  *************************************/            

  /*************************************/
  /*******      PERMISSIONS      *******/
  /*************************************/
  
  // ***** BorrowedPermissions ***** //
  var immutable BorrowedPermission borrowedIU3 = unit;
  var immutable BorrowedPermission borrowedSU1 = unit;
  var immutable BorrowedPermission borrowedSU2 = unit;
  var immutable BorrowedPermission borrowedIU2 = unit;
  var immutable BorrowedPermission borrowedIL1 = unit;

  /*************************************/
  /*******         Names         *******/
  /*************************************/
  
  var immutable String packageName1 = unit;
  var immutable String packageName2 = unit;
  var immutable String packageName3 = unit;
  var immutable String packageName4 = unit;

  var immutable String stateName1 = unit;
  var immutable String stateName2 = unit;
  var immutable String stateName3 = unit;
  var immutable String stateName4 = unit;
  
  var immutable String methodName1 = unit;
  var immutable String methodName2 = unit;
  var immutable String methodName3 = unit;
  var immutable String methodName4 = unit;

  var immutable String fieldName1 = unit;
  var immutable String fieldName2 = unit;
  var immutable String fieldName3 = unit;
  var immutable String fieldName4 = unit;
  
  var immutable String argName1 = unit;
  var immutable String argName2 = unit;
  var immutable String argName3 = unit;
  var immutable String argName4 = unit;
  
  var immutable String envName1 = unit;
  var immutable String envName2 = unit;
  var immutable String envName3 = unit;
  var immutable String envName4 = unit;
  
  var immutable String thisName = unit;

  /*************************************/
  /*******          ASTs         *******/
  /*************************************/
  
  // ***** Parsed Identifiers ***** //
  var immutable ParsedIdentifier packageID1 = unit;
  var immutable ParsedIdentifier packageID2 = unit;
  var immutable ParsedIdentifier packageID3 = unit;
  var immutable ParsedIdentifier packageID4 = unit;

  var immutable ParsedIdentifier stateID1 = unit;
  var immutable ParsedIdentifier stateID2 = unit;
  var immutable ParsedIdentifier stateID3 = unit;
  var immutable ParsedIdentifier stateID4 = unit;
  
  var immutable ParsedIdentifier methodID1 = unit;
  var immutable ParsedIdentifier methodID2 = unit;
  var immutable ParsedIdentifier methodID3 = unit;
  var immutable ParsedIdentifier methodID4 = unit;

  var immutable ParsedIdentifier fieldID1 = unit;
  var immutable ParsedIdentifier fieldID2 = unit;
  var immutable ParsedIdentifier fieldID3 = unit;
  var immutable ParsedIdentifier fieldID4 = unit;
  
  var immutable ParsedIdentifier argID1 = unit;
  var immutable ParsedIdentifier argID2 = unit;
  var immutable ParsedIdentifier argID3 = unit;
  var immutable ParsedIdentifier argID4 = unit;
  
  var immutable ParsedIdentifier envID1 = unit;
  var immutable ParsedIdentifier envID2 = unit;
  var immutable ParsedIdentifier envID3 = unit;
  var immutable ParsedIdentifier envID4 = unit;
  
  var immutable ParsedIdentifier thisID1 = unit;
  var immutable ParsedIdentifier thisID2 = unit;
  var immutable ParsedIdentifier thisID3 = unit;
  var immutable ParsedIdentifier thisID4 = unit;

  // ***** Qualified Identifiers (not full path) ***** //
  var immutable ParsedQualifiedIdentifier stateQI1 = unit; //
  var immutable ParsedQualifiedIdentifier stateQI2 = unit;
  var immutable ParsedQualifiedIdentifier stateQI3 = unit;
  var immutable ParsedQualifiedIdentifier stateQI4 = unit;

  // ***** States *****//
  /*  
   * hierarchy:
   *
   *       state1        state4
   *      /      \
   *   state2   state3
   *  (immutable)
   *
   */
  var immutable ParsedAbstractStateDecl stateAST1 = unit;
  var immutable ParsedAbstractStateDecl stateAST2 = unit;
  var immutable ParsedAbstractStateDecl stateAST3 = unit;
  var immutable ParsedAbstractStateDecl stateAST4 = unit;
  
  // ***** Nominal Structures *****//
  var immutable ParsedNominalStructure structAST1 = unit;
  var immutable ParsedNominalStructure structAST2 = unit;
  var immutable ParsedNominalStructure structAST3 = unit;
  var immutable ParsedNominalStructure structAST4 = unit;
  
  // ***** Type AST *****//
  var immutable ParsedEmptyType EMPTY_TYPE_AST = new ParsedEmptyType;
  var immutable ParsedConcreteType typeASTu1 = unit;
  var immutable ParsedConcreteType typeASTi1 = unit;
  var immutable ParsedConcreteType typeASTs1 = unit;
  var immutable ParsedConcreteType typeASTli1 = unit;
  var immutable ParsedConcreteType typeASTls1 = unit;
  var immutable ParsedConcreteType typeASTn1 = unit;
  var immutable ParsedConcreteType typeASTe1 = unit;
  var immutable ParsedConcreteType typeASTu2 = unit;
  var immutable ParsedConcreteType typeASTi2 = unit;
  var immutable ParsedConcreteType typeASTs2 = unit;
  var immutable ParsedConcreteType typeASTli2 = unit;
  var immutable ParsedConcreteType typeASTls2 = unit;
  var immutable ParsedConcreteType typeASTn2 = unit;
  var immutable ParsedConcreteType typeASTe2 = unit;
  var immutable ParsedConcreteType typeASTu3 = unit;
  var immutable ParsedConcreteType typeASTi3 = unit;
  var immutable ParsedConcreteType typeASTs3 = unit;
  var immutable ParsedConcreteType typeASTli3 = unit;
  var immutable ParsedConcreteType typeASTls3 = unit;
  var immutable ParsedConcreteType typeASTn3 = unit;
  var immutable ParsedConcreteType typeASTe3 = unit;
  var immutable ParsedConcreteType typeASTu4 = unit;
  var immutable ParsedConcreteType typeASTi4 = unit;
  var immutable ParsedConcreteType typeASTs4 = unit;
  var immutable ParsedConcreteType typeASTli4 = unit;
  var immutable ParsedConcreteType typeASTls4 = unit;
  var immutable ParsedConcreteType typeASTn4 = unit;
  var immutable ParsedConcreteType typeASTe4 = unit;

  // ***** ArgSpec AST *****//
  var immutable ParsedArgSpec argSpecASTu1u1 = unit;
  var immutable ParsedArgSpec argSpecASTu1n1 = unit;
  var immutable ParsedArgSpec argSpecASTi1i1 = unit;
  var immutable ParsedArgSpec argSpecASTs1s1 = unit;
  var immutable ParsedArgSpec argSpecASTli1li1 = unit;
  var immutable ParsedArgSpec argSpecASTls1ls1 = unit;
  var immutable ParsedArgSpec argSpecASTu2u2 = unit;
  var immutable ParsedArgSpec argSpecASTu2n2 = unit;
  var immutable ParsedArgSpec argSpecASTi2i2 = unit;
  var immutable ParsedArgSpec argSpecASTs2s2 = unit;
  var immutable ParsedArgSpec argSpecASTli2li2 = unit;
  var immutable ParsedArgSpec argSpecASTls2ls2 = unit;
  var immutable ParsedArgSpec argSpecASTu3u3 = unit;
  var immutable ParsedArgSpec argSpecASTu3n3 = unit;
  var immutable ParsedArgSpec argSpecASTi3i3 = unit;
  var immutable ParsedArgSpec argSpecASTs3s3 = unit;
  var immutable ParsedArgSpec argSpecASTli3li3 = unit;
  var immutable ParsedArgSpec argSpecASTls3ls3 = unit;
  var immutable ParsedArgSpec argSpecASTu4u4 = unit;
  var immutable ParsedArgSpec argSpecASTu4n4 = unit;
  var immutable ParsedArgSpec argSpecASTi4i4 = unit;
  var immutable ParsedArgSpec argSpecASTs4s4 = unit;
  var immutable ParsedArgSpec argSpecASTli4li4 = unit;
  var immutable ParsedArgSpec argSpecASTls4ls4 = unit;
  
  var immutable ParsedArgSepc argSpecASTu2u3 = unit;
  var immutable ParsedArgSepc argSpecASTs2s3 = unit;
  var immutable ParsedArgSepc argSpecASTls2ls3 = unit;
  
  // ***** Arg AST *****//
  var immutable ParsedArg argAST1u1n1 = unit;
  var immutable ParsedArg argAST2u1u1 = unit;
  var immutable ParsedArg envAST1u1u1 = unit;
  var immutable ParsedArg envAST2u1u1 = unit;
  var immutable ParsedArg envASTtu1n1 = unit;
  
  // ***** Fields ***** //
  var immutable ParsedFieldDecl fvalAST1u1 = unit;
  var immutable ParsedFieldDecl fvalAST1s1 = unit;
  var immutable ParsedFieldDecl fvalAST2i2 = unit;
  var immutable ParsedFieldDecl fvalAST2e2 = unit;
  var immutable ParsedFieldDecl fvalAST3u3 = unit;
  var immutable ParsedFieldDecl fvarAST4s4 = unit;

  // ***** Methods ***** //
  var immutable ParsedMethodDecl methodAST1Ru1A1u1n12u1u1TE1u1u12u1u1 = unit;
  var immutable ParsedMethodDecl methodAST2Ru1A1u1n12u1u1Tu1n1E1u1u1 = unit;
  var immutable ParsedMethodDecl methodAST1Ru1A1u1n12u1u1Tu1n1E = unit;
  var immutable ParsedMethodDecl methodAST2Ru1A1u1n12u1u1TE = unit;
 

  /*************************************
  **************************************
              INITIALIZATION
  **************************************
  *************************************/  


  /*************************************/
  /*******      PERMISSIONS      *******/
  /*************************************/
  
  method initPerms() {
  
    // ***** BorrowedPermissions ***** //
    this.borrowedIU3 = makeBorrowedPerm(IMM,UNIQUE,3);
    this.borrowedSU1 = makeBorrowedPerm(SHARED,UNIQUE,1);
    this.borrowedSU2 = makeBorrowedPerm(SHARED,UNIQUE,2);
    this.borrowedIU2 = makeBorrowedPerm(IMM,UNIQUE,2);
    this.borrowedIL1 = makeBorrowedPerm(IMM,LOCALIMMUTABLE,1);
  }

  method initASTs() {
    var args = unit;
    var env = unit;
    var idList = unit;
    var mods = unit;
    
    /*************************************/
    /*******         Names         *******/
    /*************************************/
    
    this.packageName1 = "pack1";
    this.packageName2 = "pack2";
    this.packageName3 = "pack3";
    this.packageName4 = "pack4";
    
    this.stateName1 = "state1";
    this.stateName2 = "state2";
    this.stateName3 = "state3";
    this.stateName4 = "state4";
    
    this.methodName1 = "method1";
    this.methodName2 = "method2";
    this.methodName3 = "method3";
    this.methodName4 = "method4";
    
    this.fieldName1 = "field1";
    this.fieldName2 = "field2";
    this.fieldName3 = "field3";
    this.fieldName4 = "field4";
    
    this.argName1 = "arg1";
    this.argName2 = "arg2";
    this.argName3 = "arg3";
    this.argName4 = "arg4";
    
    this.envName1 = "env1";
    this.envName2 = "env2";
    this.envName3 = "env3";
    this.envName4 = "env4";
    
    this.thisName = "this";
    
    /*************************************/
    /*******          ASTs         *******/
    /*************************************/
    
    // ***** Parsed Identifier AST ***** //
    this.packageID1 = new ParsedIdentifier { val name = this.packageName1; };
    this.packageID2 = new ParsedIdentifier { val name = this.packageName2; };
    this.packageID3 = new ParsedIdentifier { val name = this.packageName3; };
    this.packageID4 = new ParsedIdentifier { val name = this.packageName4; };
    
    this.stateID1 = new ParsedIdentifier { val name = this.stateName1; };
    this.stateID2 = new ParsedIdentifier { val name = this.stateName2; };
    this.stateID3 = new ParsedIdentifier { val name = this.stateName3; };
    this.stateID4 = new ParsedIdentifier { val name = this.stateName4; };
    
    this.methodID1 = new ParsedIdentifier { val name = this.methodName1; };
    this.methodID2 = new ParsedIdentifier { val name = this.methodName2; };
    this.methodID3 = new ParsedIdentifier { val name = this.methodName3; };
    this.methodID4 = new ParsedIdentifier { val name = this.methodName4; };
    
    this.fieldID1 = new ParsedIdentifier { val name = this.fieldName1; };
    this.fieldID2 = new ParsedIdentifier { val name = this.fieldName2; };
    this.fieldID3 = new ParsedIdentifier { val name = this.fieldName3; };
    this.fieldID4 = new ParsedIdentifier { val name = this.fieldName4; };
    
    this.argID1 = new ParsedIdentifier { val name = this.argName1; };
    this.argID2 = new ParsedIdentifier { val name = this.argName2; };
    this.argID3 = new ParsedIdentifier { val name = this.argName3; };
    this.argID4 = new ParsedIdentifier { val name = this.argName4; };
    
    this.envID1 = new ParsedIdentifier { val name = this.envName1; };
    this.envID2 = new ParsedIdentifier { val name = this.envName2; };
    this.envID3 = new ParsedIdentifier { val name = this.envName3; };
    this.envID4 = new ParsedIdentifier { val name = this.envName4; };
   
    //each of these will be mapped to different state symbols in the AST->symbol map 
    this.thisID1 = new ParsedIdentifier { val name = this.thisName; }; 
    this.thisID2 = new ParsedIdentifier { val name = this.thisName; };
    this.thisID3 = new ParsedIdentifier { val name = this.thisName; };
    this.thisID4 = new ParsedIdentifier { val name = this.thisName; };
    
    // ***** Qualified Identifier AST ***** //
    idList = makeLinkedList();
    idList.add(this.stateID1);
    this.stateQI1 = new ParsedQualifiedIdentifier { val identifiers = idList; };
    
    idList = makeLinkedList();
    idList.add(this.stateID2);
    this.stateQI2 = new ParsedQualifiedIdentifier { val identifiers = idList; };
    
    idList = makeLinkedList();
    idList.add(stateID3);
    this.stateQI3 = new ParsedQualifiedIdentifier { val identifiers = idList; };
    
    idList = makeLinkedList();
    idList.add(stateID4);
    this.stateQI4 = new ParsedQualifiedIdentifier { val identifiers = idList; };
    
    // ***** State AST *****//
    /*  
     * hierarchy:
     *
     *       state1        state4
     *      /      \
     *   state2   state3
     *  (immutable)
     *
     */
    this.stateAST1 = new ParsedStateDecl {
      val name = this.stateID1;
      val modifiers = makeLinkedList();
      val caseOf = new ParsedEmptyQualifiedIdentifier;
      val StaticArgsSpec = makeLinkedList();
      val metaCaseOfArgs = makeLinkedList();
    };
    mods = makeLinkedList();
    mods.add(new ParsedImmutableModifier);
    this.stateAST2 = new ParsedStateDecl {
      val name = this.stateID2;
      val modifiers = mods;
      val caseOf = this.stateQI1;
      val StaticArgsSpec = makeLinkedList();
      val metaCaseOfArgs = makeLinkedList();
    };
    this.stateAST3 = new ParsedStateDecl {
      val name = this.stateID3;
      val modifiers = makeLinkedList();
      val caseOf = this.stateQI1;
      val StaticArgsSpec = makeLinkedList();
      val metaCaseOfArgs = makeLinkedList();
    };
    this.stateAST4 = new ParsedStateDecl {
      val name = this.stateID4;
      val modifiers = makeLinkedList();
      val caseOf = new ParsedEmptyQualifiedIdentifier;
      val StaticArgsSpec = makeLinkedList();
      val metaCaseOfArgs = makeLinkedList();
    };
    
    // ***** Nominal Structure AST *****//
    this.structAST1 = new ParsedNominalStructure { 
      val stateQi = this.stateQI1; 
      val metaTypes = makeLinkedList(); 
    };
    this.structAST2 = new ParsedNominalStructure { 
      val stateQi = this.stateQI2; 
      val metaTypes = makeLinkedList(); 
    };
    this.structAST3 = new ParsedNominalStructure { 
      val stateQi = this.stateQI3; 
      val metaTypes = makeLinkedList(); 
    };
    this.structAST4 = new ParsedNominalStructure { 
      val stateQi = this.stateQI4; 
      val metaTypes = makeLinkedList(); 
    }; 
    
    // ***** Type AST **** //
    
    this.typeASTu1 = new ParsedConcreteType {
      val permission = new ParsedUniquePermission;
      val structure = this.structAST1;
    };
    this.typeASTi1 = new ParsedConcreteType {
      val permission = new ParsedImmutablePermission;
      val structure = this.structAST1;
    };
    this.typeASTs1 = new ParsedConcreteType {
      val permission = new ParsedSharedPermission;
      val structure = this.structAST1;
    };
    this.typeASTli1 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedImmutablePermission; };
      val structure = this.structAST1;
    };
    this.typeASTls1 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedSharedPermission; };
      val structure = this.structAST1;
    };
    this.typeASTn1 = new ParsedConcreteType {
      val permission = new ParsedNonePermission;
      val structure = this.structAST1;
    };
    this.typeASTe1 = new ParsedConcreteType {
      val permission = new ParsedEmptyPermission;
      val structure = this.structAST1;
    }; 
    this.typeASTu2 = new ParsedConcreteType {
      val permission = new ParsedUniquePermission;
      val structure = this.structAST2;
    };
    this.typeASTi2 = new ParsedConcreteType {
      val permission = new ParsedImmutablePermission;
      val structure = this.structAST2;
    };
    this.typeASTs2 = new ParsedConcreteType {
      val permission = new ParsedSharedPermission;
      val structure = this.structAST2;
    };
    this.typeASTli2 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedImmutablePermission; };
      val structure = this.structAST2;
    };
    this.typeASTls2 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedSharedPermission; };
      val structure = this.structAST2;
    };
    this.typeASTn2 = new ParsedConcreteType {
      val permission = new ParsedNonePermission;
      val structure = this.structAST2;
    };
    this.typeASTe2 = new ParsedConcreteType {
      val permission = new ParsedEmptyPermission;
      val structure = this.structAST2;
    };   
    this.typeASTu3 = new ParsedConcreteType {
      val permission = new ParsedUniquePermission;
      val structure = this.structAST3;
    };
    this.typeASTi3 = new ParsedConcreteType {
      val permission = new ParsedImmutablePermission;
      val structure = this.structAST3;
    };
    this.typeASTs3 = new ParsedConcreteType {
      val permission = new ParsedSharedPermission;
      val structure = this.structAST3;
    };
    this.typeASTli3 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedImmutablePermission; };
      val structure = this.structAST3;
    };
    this.typeASTls3 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedSharedPermission; };
      val structure = this.structAST3;
    };
    this.typeASTn3 = new ParsedConcreteType {
      val permission = new ParsedNonePermission;
      val structure = this.structAST3;
    };
    this.typeASTe3 = new ParsedConcreteType {
      val permission = new ParsedEmptyPermission;
      val structure = this.structAST3;
    };
    this.typeASTu4 = new ParsedConcreteType {
      val permission = new ParsedUniquePermission;
      val structure = this.structAST4;
    };
    this.typeASTi4 = new ParsedConcreteType {
      val permission = new ParsedImmutablePermission;
      val structure = this.structAST4;
    };
    this.typeASTs4 = new ParsedConcreteType {
      val permission = new ParsedSharedPermission;
      val structure = this.structAST4;
    };
    this.typeASTli4 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedImmutablePermission; };
      val structure = this.structAST4;
    };
    this.typeASTls4 = new ParsedConcreteType {
      val permission = new ParsedLocalPermission 
                          { val symmetricPermission = new ParsedSharedPermission; };
      val structure = this.structAST4;
    };
    this.typeASTn4 = new ParsedConcreteType {
      val permission = new ParsedNonePermission;
      val structure = this.structAST4;
    };
    this.typeASTe4 = new ParsedConcreteType {
      val permission = new ParsedEmptyPermission;
      val structure = this.structAST4;
    };
    
    // ***** ArgSpec AST **** //
    this.argSpecASTu1u1 = new ParsedArgSpec{
      val inputType = this.typeASTu1;
      val outputType = this.typeASTu1;
    };
    this.argSpecASTu1n1 = new ParsedArgSpec{
      val inputType = this.typeASTu1;
      val outputType = this.typeASTn1;
    };
    this.argSpecASTi1i1 = new ParsedArgSpec{
      val inputType = this.typeASTi1;
      val outputType = this.typeASTi1;
    };
    this.argSpecASTs1s1 = new ParsedArgSpec{
      val inputType = this.typeASTs1;
      val outputType = this.typeASTs1;
    };
    this.argSpecASTli1li1 = new ParsedArgSpec{
      val inputType = this.typeASTli1;
      val outputType = this.typeASTli1;
    };
    this.argSpecASTls1ls1 = new ParsedArgSpec{
      val inputType = this.typeASTls1;
      val outputType = this.typeASTls1;
    };
    this.argSpecASTu2u2 = new ParsedArgSpec{
      val inputType = this.typeASTu2;
      val outputType = this.typeASTu2;
    };
    this.argSpecASTu2n2 = new ParsedArgSpec{
      val inputType = this.typeASTu2;
      val outputType = this.typeASTn2;
    };
    this.argSpecASTi2i2 = new ParsedArgSpec{
      val inputType = this.typeASTi2;
      val outputType = this.typeASTi2;
    };
    this.argSpecASTs2s2 = new ParsedArgSpec{
      val inputType = this.typeASTs2;
      val outputType = this.typeASTs2;
    };
    this.argSpecASTli2li2 = new ParsedArgSpec{
      val inputType = this.typeASTli2;
      val outputType = this.typeASTli2;
    };
    this.argSpecASTls2ls2 = new ParsedArgSpec{
      val inputType = this.typeASTls2;
      val outputType = this.typeASTls2;
    };
    this.argSpecASTu3u3 = new ParsedArgSpec{
      val inputType = this.typeASTu3;
      val outputType = this.typeASTu3;
    };
    this.argSpecASTu3n3 = new ParsedArgSpec{
      val inputType = this.typeASTu3;
      val outputType = this.typeASTn3;
    };
    this.argSpecASTi3i3 = new ParsedArgSpec{
      val inputType = this.typeASTi3;
      val outputType = this.typeASTi3;
    };
    this.argSpecASTs3s3 = new ParsedArgSpec{
      val inputType = this.typeASTs3;
      val outputType = this.typeASTs3;
    };
    this.argSpecASTli3li3 = new ParsedArgSpec{
      val inputType = this.typeASTli3;
      val outputType = this.typeASTli3;
    };
    this.argSpecASTls3ls3 = new ParsedArgSpec{
      val inputType = this.typeASTls3;
      val outputType = this.typeASTls3;
    };
    this.argSpecASTu4u4 = new ParsedArgSpec{
      val inputType = this.typeASTu4;
      val outputType = this.typeASTu4;
    };
    this.argSpecASTu4n4 = new ParsedArgSpec{
      val inputType = this.typeASTu4;
      val outputType = this.typeASTn4;
    };
    this.argSpecASTi4i4 = new ParsedArgSpec{
      val inputType = this.typeASTi4;
      val outputType = this.typeASTi4;
    };
    this.argSpecASTs4s4 = new ParsedArgSpec{
      val inputType = this.typeASTs4;
      val outputType = this.typeASTs4;
    };
    this.argSpecASTli4li4 = new ParsedArgSpec{
      val inputType = this.typeASTli4;
      val outputType = this.typeASTli4;
    };
    this.argSpecASTls4ls4 = new ParsedArgSpec{
      val inputType = this.typeASTls4;
      val outputType = this.typeASTls4;
    };

    this.argSpecASTu2u3 = new ParsedArgSpec{
      val inputType = this.typeASTu2;
      val outputType = this.typeASTu3;
    };
    this.argSpecASTs2s3 = new ParsedArgSpec{
      val inputType = this.typeASTs2;
      val outputType = this.typeASTs3;
    };
    this.argSpecASTls2ls3 = new ParsedArgSpec{
      val inputType = this.typeASTls2;
      val outputType = this.typeASTls3;
    };
    
    // ***** Args ***** //
    this.argAST1u1n1 = new ParsedArg {
      val name = this.argID1;
      val argSpec = this.argSpecASTu1n1;
    };
    this.argAST2u1u1 = new ParsedArg {
      val name = this.argID2;
      val argSpec = this.argSpecASTu1u1;
    };
    this.envAST1u1u1 = new ParsedArg {
      val name = this.envID1;
      val argSpec = this.argSpecASTu1u1;
    };
    this.envAST2u1u1 = new ParsedArg {
      val name = this.envID2;
      val argSpec = this.argSpecASTu1u1;
    };
    this.envASTtu1n1 = new ParsedArg {
      val name = this.thisID1;
      val argSpec = this.argSpecASTu1n1;
    };
    
    // ***** Fields ***** //
    this.fvalAST1u1 = new ParsedFieldDecl {
        val name = this.fieldID1;
        val modifiers = makeLinkedList();
        val specifier = new ParsedValSpecifier;
        val fieldType = this.typeASTu1;
    };
    this.fvalAST1s1 = new ParsedFieldDecl {
        val name = this.fieldID1;
        val modifiers = makeLinkedList();
        val specifier = new ParsedValSpecifier;
        val fieldType = this.typeASTs1;
    };
    this.fvalAST2i2 = new ParsedFieldDecl {
        val name = this.fieldID2;
        val modifiers = makeLinkedList();
        val specifier = new ParsedValSpecifier;
        val fieldType = this.typeASTi2;
    };
    this.fvalAST2e2 = new ParsedFieldDecl {
        val name = this.fieldID2;
        val modifiers = makeLinkedList();
        val specifier = new ParsedValSpecifier;
        val fieldType = this.typeASTe2;
    };
    this.fvalAST3u3 = new ParsedFieldDecl {
        val name = this.fieldID3;
        val modifiers = makeLinkedList();
        val specifier = new ParsedValSpecifier;
        val fieldType = this.typeASTu3;
    };
    this.fvarAST4s4 = new ParsedFieldDecl {
        val name = this.fieldID4;
        val modifiers = makeLinkedList();
        val specifier = new ParsedVarSpecifier;
        val fieldType = this.typeASTs4;
    };
    
    // ***** Methods ***** //
    
    args = makeLinkedList();
    args.add(this.argAST2u1u1); //#2
    args.add(this.argAST1u1n1); //#1
    env = makeLinkedList();
    env.add(this.envAST1u1u1);
    env.add(this.envAST2u1u1);
    this.methodAST1Ru1A1u1n12u1u1TE1u1u12u1u1 = new ParsedMethodDecl {
      val name = methodID1;
      val modifiers = makeLinkedList();
      val returnType = typeASTu1;
      val StaticArgsSpec = makeLinkedList();
      val arguments = args;
      val env = env;
    };
    
    args = makeLinkedList();
    args.add(this.argAST2u1u1); //#2
    args.add(this.argAST1u1n1); //#1
    env = makeLinkedList();
    env.add(this.envAST1u1u1);
    env.add(this.envASTtu1n1);
    this.methodAST2Ru1A1u1n12u1u1Tu1n1E1u1u1 = new ParsedMethodDecl {
      val name = methodID2;
      val modifiers = makeLinkedList();
      val returnType = typeASTu1;
      val StaticArgsSpec = makeLinkedList();
      val arguments = args;
      val env = env;
    };
    
    args = makeLinkedList();
    args.add(this.argAST2u1u1); //#2
    args.add(this.argAST1u1n1); //#1
    env = makeLinkedList();
    env.add(this.envASTtu1n1);
    this.methodAST1Ru1A1u1n12u1u1Tu1n1E = new ParsedMethodDecl {
      val name = methodID1;
      val modifiers = makeLinkedList();
      val returnType = typeASTu1;
      val StaticArgsSpec = makeLinkedList();
      val arguments = args;
      val env = env;
    };
    
    args = makeLinkedList();
    args.add(this.argAST2u1u1); //#2
    args.add(this.argAST1u1n1); //#1
    env = makeLinkedList();   
    this.methodAST2Ru1A1u1n12u1u1TE = new ParsedMethodDecl {
      val name = methodID2;
      val modifiers = makeLinkedList();
      val returnType = typeASTu1;
      val StaticArgsSpec = makeLinkedList();
      val arguments = args;
      val env = env;
    };
      
  }

}