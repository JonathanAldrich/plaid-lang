package plaid.compiler.tests;

import plaid.compiler.permissions.PermissionTestFactory;
import plaid.compiler.symbol.SymbolTestFactory;
import plaid.compiler.typechecker.LinearContextTestFactory;
import plaid.compiler.types.TypeTestFactory;
import plaid.compiler.util.TypeFromASTTestFactory;


method void main() {
    val permFactory = new PermissionTestFactory;
    val permTests = permFactory.createTests();
    permTests.map(fn (t) => t.run());
    
    val lcFactory = new LinearContextTestFactory;
    val lcTests = lcFactory.createTests();
    lcTests.map(fn (t) => t.run());
    
    val symFactory = new SymbolTestFactory;
    val symTests = symFactory.createTests();
    symTests.map(fn (t) => t.run());
    
    val typeFactory = new TypeTestFactory;
    val typeTests = typeFactory.createTests();
    typeTests.map(fn (t) => t.run());
    
    val astFactory = new TypeFromASTTestFactory;
    val astTests = astFactory.createTests();
    astTests.map(fn (t) => t.run());
    
}