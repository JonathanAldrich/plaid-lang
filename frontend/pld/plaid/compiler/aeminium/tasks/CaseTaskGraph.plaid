package plaid.compiler.aeminium.tasks;

import plaid.compiler.*;
import plaid.compiler.types.*;
import plaid.compiler.aeminium.*;
import plaid.ast.parsed.*;

import plaid.collections.makeLinkedList;

state CaseTaskGraph {
    val unique Set allTasks                   = java.util.HashSet.new();
    val unique Set tasksDependingOnMatchEnter = java.util.HashSet.new();
    val unique Set tasksMatchLeaveDependsOn   = java.util.HashSet.new();
    
    method immutable Integer getWeight() {
        var immutable Integer weight = 0;
        val it = this.allTasks.iterator();
        while { it.hasNext() }{  
            val curTask = it.next();
            weight = weight + curTask.getWeight() 
        };
        
        weight;
    }
}