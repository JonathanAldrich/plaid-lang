package plaid.compiler.typechecker;

import plaid.compiler.*;

/**
 * To typecheck a field decl, we populate a linear context with all of the package-level fields and methods
 * and typecheck the body with the declared permission.  The types of package-level fields must stay the same.
 */
method typecheckDecl(immutable ParsedDecl declNode) {

  val unique Option<immutable FieldSymbol> declSymOption = symbolForAST(declNode);
  match (declSymOption) {
    case Some {
      match (declSymOption.value) {
        case StateSymbol {
        
        }
        case StateValSymbol {
        
        }
        case FieldSymbol {
        
        }
        case MethodSymbol {
        
        }
        default { ABORT("<typecheckDecl> unrecognized symbol for decl '" + declNode.name + "'") }
      }
    }
    case None { ABORT("<typecheckDecl> No Symbol for decl '" + declNode.name + "'") }
  } 
}