package plaid.compiler.util;

import plaid.compiler.symbolForAST;
import plaid.compiler.DEBUG;
import plaid.compiler.DEBUG_PRIO_LOW;
import plaid.compiler.ABORT;
import plaid.ast.parsed.ParsedNominalStructure;
import plaid.ast.util.makeStringFromQualifiedIdentifier;

method immutable Structure makeNominalStructureFromAST(immutable ParsedNominalStructure ps) {
    val qiSymbol = symbolForAST(ps.stateQi);
    match (qiSymbol) {
        case Some {
            DEBUG(DEBUG_PRIO_LOW, "<makeTypeFromAST> create structure for state '" + qiSymbol.value.getFQN() + "'");
      
            //return the structure
            qiSymbol.value.getStructure();
        }
        case None {
            ABORT("Cannot find symbol for '" + makeStringFromQualifiedIdentifier(typeNode.structure.stateQi) + "'");
        }
    }

}