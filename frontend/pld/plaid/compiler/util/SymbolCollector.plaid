package plaid.compiler.util;

import plaid.compiler.*;
import plaid.ast.parsed.*;

import plaid.collections.makeLinkedList;

state SymbolCollector = ParsedLeafVisitor with  {
    val symbols = makeLinkedList();

	override method void LOG(immutable String msg) {
        DEBUG(DEBUG_PRIO_LOW, "<SymbolCollector> " + msg);
    }

	override method void visitParsedIdentifier(immutable ParsedIdentifier node) {
		LOG("visit ParsedIdentifier");
        val symbol = symbolForAST(node);
        match (symbol) {
            case Some {
                this.symbols.add(symbol.value);
            }
            case None {
                ABORT("Cannot abori");
            }
        }
	}

    override method void visitParsedDereference(immutable ParsedDereference node) {
		LOG("visit ParsedDereference");
		node.left.accept(this);
	}
}