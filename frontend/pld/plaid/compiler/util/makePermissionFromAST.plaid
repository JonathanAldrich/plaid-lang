package plaid.compiler.util;

import plaid.compiler.*;
import plaid.compiler.permissions.*;

method immutable Permission makePermissionFromAST(immutable ParsedPermission node) {
  match (node) {
    case ParsedUniquePermission { UNIQUE }
    case ParsedImmutablePermission { IMMUTABLE }
    case ParsedSharedPermission { SHARED } //TODO: datagroups
    case ParsedLocalPermission {
      match (node.symmetricPermission) {
        case ParsedImmutablePermission { LOCALIMMUTABLE }
        case ParsedSharedPermission { LOCALSHARED } //TODO: datagroups
        default { 
          ABORT("<makePermissionFromAST> Unknown Permission node inside Local permission: "
                  + node.symmetricPermission.nodeName()) 
        }
      }
    }
    case ParsedNonePermission { NONEP }
    case ParsedEmptyPermission { DYNP }
    default { 
      ABORT("<makePermissionFromAST> Unknown Permission node: "
                  + node.symmetricPermission.nodeName()) 
    }
  }
}