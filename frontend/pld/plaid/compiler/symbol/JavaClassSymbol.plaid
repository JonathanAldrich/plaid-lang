package plaid.compiler.symbol;

import plaid.compiler.Symbol;

import java.lang.Class;

state JavaClassSymbol case of Symbol {
     val shared Class class;
     val immutable Symbol owner;
     
     override method immutable Boolean ==(immutable Symbol other)[immutable JavaClassSymbol this] {
        match (other) {
          case JavaClassSymbol { this.class.equals(other.class) }
          default { false }
        }
     }
     
     method immutable Boolean checkStaticField(immutable String fieldName) {
         val immutable List fields = Arrays.asList(this.class.getFields());
         match (fields.contains(fieldName)) {
            case True { 
              Modifier.isStatic(fields.get(fieldName).getModifiers())
            }
            case False { false }
         }
     }
     
     override method immutable String symbolType() { "Java Class Symbol" }

}