package plaid.compiler.symbol;

import plaid.compiler.Symbol;
import plaid.ast.parsed.*;
import plaid.compiler.util.makeTypeFromAST;

state FieldSymbol case of Symbol {
    val immutable ASTNode declaration;
    val immutable Symbol owner;
    val immutable Option<immutable FieldType> fieldType = NONE;

    method immutable FieldType getType() {
        match (this.filedType) {
            case Some {
                this.fieldType.value;
            }
            case None {
                val fieldType = makeTypeFromAST(this.declaration.fieldType);
                var isVar = false;        

                match (this.declaration.specifier) {
                    case VarSpecifier {
                        isVar = true;
                    }
                    default {
                        isVar = false;
                    }
                };

                this.fieldType = makeSome(new FieldType {
                    val isVar = isVar;
                    val fileType = fileType;
                    val name = this.declaration.name.name;
                });
                this.fieldType.value
            }
        }
    }
}