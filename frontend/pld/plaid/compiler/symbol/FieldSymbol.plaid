package plaid.compiler.symbol;

import plaid.compiler.*;
import plaid.ast.parsed.*;
import plaid.compiler.util.makeTypeFromAST;

state FieldSymbol case of Symbol {
    val immutable ASTNode declaration;
    val immutable Symbol owner;

    method immutable FieldSignature getSignature() {
           DEBUG(DEBUG_PRIO_LOW, "<FieldSymbol> compute type for field");
           val fieldType = makeTypeFromAST(this.declaration.fieldType);
           var isVar     = false;        

           match (this.declaration.specifier) {
               case VarSpecifier {
                   isVar = true;
               }
               default {
                   isVar = false;
               }
           };

           val newType = new FieldSignature  {
                val isVar    = isVar;
                val fileType = fieldType;
                val name     = this.declaration.name.name;
           };
           newType
    }
}