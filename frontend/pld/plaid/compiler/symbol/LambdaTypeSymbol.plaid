package plaid.compiler.symbol;

import plaid.compiler.Symbol;
import plaid.compiler.types.*;
import plaid.ast.parsed.ASTNode;
import plaid.ast.util.makeStringFromQualifiedIdentifier;

state LambdaTypeSymbol case of Symbol {
    val immutable ASTNode declaration;
    val immutable Option<immutable LambdaType> lambdaType;
    
    method immutable PlaidType getType() {   
        match (lambdaType) {
            case Some { this.lambdaType.value }
            case None {
                val lambdaType = makeTypeFromAST(this.declaration);
                this.lambdaType = makeSome(lambdaType);
                lambdaType    
            }
        }
    }
    
    override method immutable String symbolType() { "Lambda Type Symbol" }
}
