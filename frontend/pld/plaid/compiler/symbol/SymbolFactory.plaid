package plaid.compiler.symbol;

state SymbolFactory {
    method shared VariableSymbol makeVariableSymbol(immutable String name, 
                                                    immutable ASTNode decl) {
        new VariableSymbol{name = name; declaration = decl;};
    }

    method shared ThisSymbol makeThisSymbol(shared Symbol stateSymbol) {
        new ThisSymbol{ name = "this"; stateSymbol = stateSymbol;};
    }


    method shared FieldSymbol makeFieldSymbol(immutable String name, 
                                              immutable ASTNode decl,
                                              owner) {
        new FieldSymbol{name = name; declaration = decl; owner = owner;};
    }
    
    method shared MethodSymbol makeMethodSymbol (immutable String name, 
                                              immutable ASTNode decl,
                                              owner) {
        new MethodSymbol{name = name; declaration = decl; owner = owner;};
    } 

    method shared StateSymbol makeStateSymbol(immutable String name, 
                                              immutable ASTNode decl) {
        new StateSymbol{name = name; declaration = decl;};
    }
    
    method shared StateValSymbol makeStateValSymbol(immutable String name, 
                                              immutable ASTNode decl) {
        new StateValSymbol{name = name; declaration = decl;};
    }
    
    method shared PackageSymbol makePackageSymbol(immutable String name, 
                                                  shared Symbol owner) {
        new PackageSymbol{name = name; owner = owner;};
    }
    
    method shared TopSymbol makeTopSymbol() {
        new TopSymbol;
    }


}

