package plaid.compiler.symbol;

state SymbolFactory {
    method shared VariableSymbol makeVariableSymbol(immutable String name, 
                                                    immutable ASTNode decl) {
        new VariableSymbol{name = name; declaration = decl;};
    }

    method shared ThisSymbol makeThisSymbol(shared Symbol stateSymbol, immutable ASTNode decl) {
        new ThisSymbol{ name = "this";  declaration = decl; stateSymbol = stateSymbol;};
    }


    method shared FieldSymbol makeFieldSymbol(immutable String name, 
                                              immutable ASTNode decl,
                                              shared Symbol owner) {
        new FieldSymbol{name = name; declaration = decl; owner = owner;};
    }
    
    method shared MethodSymbol makeMethodSymbol (immutable String name, 
                                              immutable ASTNode decl,
                                              owner) {
        new MethodSymbol{name = name; declaration = decl; owner = owner;};
    } 

    method shared LambdaSymbol makeLambdaSymbol (immutable String name, 
                                                immutable ASTNode decl) {
        new LambdaSymbol{name = "LAMBDA"; declaration = decl; };
    } 


    method shared StateSymbol makeStateSymbol(immutable String name, 
                                              immutable ASTNode decl,
                                              shared Symbol owner) {
        new StateSymbol{name = name; declaration = decl; owner = owner;};
    }

    method shared StateRefSymbol makeStateRefSymbol(immutable ASTNode decl) {
        new StateRefSymbol{name = "<ANONYMOUS>"; declaration = decl;};
    }

    method shared JavaClassSymbol makeJavaClassSymbol(immutable String name, 
                                                  shared Class class,
                                                  shared Symbol owner) {
        new JavaClassSymbol{name = name; class = class; owner = owner;};
    }

    
    method shared StateValSymbol makeStateValSymbol(immutable String name, 
                                              immutable ASTNode decl) {
        new StateValSymbol{name = name; declaration = decl;};
    }
    
    method shared PackageSymbol makePackageSymbol(immutable String name, 
                                                  shared Symbol owner) {
        new PackageSymbol{name = name; owner = owner;};
    }
    
    method shared TopSymbol makeTopSymbol() {
        new TopSymbol;
    }

    method shared DynamicSymbol makeDynamicSymbol() {
        new DyanmicSymbol;
    }
}

