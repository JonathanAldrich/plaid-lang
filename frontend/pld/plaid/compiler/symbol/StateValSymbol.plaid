package plaid.compiler.symbol;

import plaid.compiler.Symbol;
import plaid.ast.parsed.ASTNode;

state StateValSymbol case of Symbol {
    var immutable ASTNode declaration;
    val immutable Symbol owner;
    
    method void updateDeclaration(immutable PlaidStateValDecl declaration) {
        delSymbolForAST(this.declaration);
        delSymbolForAST(this.declaration.name);
        this.declaration = declaration;
        addSymbolForAST(this.declaration, this);
        addSymbolForAST(this.declaration.name, this);
    }
    
    override method immutable Boolean ==(immutable Symbol other)[immutable StateValSymbol this] {
        match (other) {
            case StateValSymbol { this.name.equals(other.name) && this.owner == other.owner }
            default { false }
        }
    }
} 