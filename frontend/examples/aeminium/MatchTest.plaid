package examples.aeminium;

state MatchTest {
    @sequential
    method immutable Integer foo() [immutable MatchTest this] {}
     
    method immutable Integer parallelParallelMatches(immutable Boolean value) [immutable MatchTest this] {
        val immutable Boolean valueNot = !value;  
     
        val immutable Integer x = match (valueNot) {
            case True  { this.foo() + this.foo() }
            case False { this.foo() }
        };
         
        val immutable Integer y = match (valueNot) {
            case True  { this.foo() + this.foo() }
            case False { this.foo() } 
        };
         
       x + y
    }
}