package examples.poplExamples;

/*
import java.util.Random;

val theRandom = Random.new();

val randomCase = fn() => {
  val randomBinary = theRandom.nextInt(2);
  match (randomBinary == 0) {
    case True { new Case1 }
    case False { new Case2 }
  } 
}
*/

state Cases { }

state Case1 case of Cases { }

state Case2 case of Cases { }



state S1 { }

state S2 case of S1 { }

state FieldState {
  var unique S1 f1;
}

state top {
  method void m1(unique S1 >> unique S1 x) {
    val unique S1 temp = x;
  }
  
  method void m2(unique S1 >> unique S1 x, unique S2 >> unique S2 y) {
    val unique Cases theCase = new Case1;
    val unique S1 z = match (theCase) { /* (randomCase()) { - cannot typecheck now*/
      case Case1 { x }
      case Case2 { y }
    };
  }
  
  method void m3(unique S1 >> none S1 x, unique FieldState >> unique FieldState y) {
    val unique S1 z = x;
    y.f1 = z;
  }
  
  method void m4(unique FieldState >> unique FieldState x) {
    val unique S1 y = x.f1;
  }
  
  method void m5(unique S1 >> unique S1 x, unique FieldState >> unique FieldState y) {
    val unique Cases theCase = new Case1;
    val unique S1 z = match (theCase) { /* (randomCase()) { - cannot typecheck now*/
      case Case1 { x }
      case Case2 { y.f1 }
    };
  }
}