package examples.atomicBlock;

state Counter  {
    var immutable Integer value = 0;

    /*
    method immutable Integer count() [shared Counter this] {
        atomic {
            this.value
        }
    }

    method void inc() [shared Counter this] {
        atomic {
            this.value = this.value + 1
        }
    }

    method void reset() [shared Counter this] {
        atomic {
            this.value = 0;
            this.inc();
            this.inc();
        };
    }
    */
    
    method void mergeAtomic() [shared Counter this] {
         atomic { this.value = 1 };
         val immutable Integer x = 1 + 1;
         val immutable Integer z = 3 + 3;
         atomic { 
            val immutable Integer y = 2 + 2;
            this.value = x;
         };
    }
}

method void main(unique Counter >> shared Counter counter) {
   //val unique Counter counter = new Counter; 
   
   //counter.inc();
   //counter.inc(); 
   //counter.inc();
}

