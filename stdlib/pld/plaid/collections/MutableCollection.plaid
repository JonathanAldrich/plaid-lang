/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */
 
package plaid.collections;

state MutableCollection {
	/**
	 * Attempts to add the provided element to the collection, returning true if addition
	 * succeeded and false if it did not. Reasons for failing to add an element to a collection
	 * are implementation specific.
	 */
	method immutable Boolean add(/*T*/ e);

	/**
	 * Attempts to add all the elements in the provided collection to this collection. No guarantees
	 * are given as to the order in which elements will be added.
	 */
	method void addAll(immutable Collection coll) {
		coll.do(fn(elem) => { add(elem); });
	}

	method immutable Boolean filterUntil(condition, matcher);

	method immutable Boolean filterAll(f) {
		filterUntil({ false }, f)
	}

	method immutable Boolean filterFirst(f) {
		filterUntil({ true }, f)
	}
	
	method void clear();
}