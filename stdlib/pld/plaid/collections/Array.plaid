/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */
 
package plaid.collections;

/**
 * A bounded map with a fixed set of keys that always have associated values.
 */
state Array case of Map/*<Integer,E>*/ {
	/*
	type E;
	*/

	val contents;
	val contentsSize;

	method /*<E>*/ get(immutable Integer index) {
		contents.get(index)
	}

	method /*<E>*/ set(immutable Integer index, /*E*/ elem) {
		contents.set(index, createSome(elem))
	}

	override method map(f) {
		makeArray(contentsSize, fn(index) => f(contents.get(index)));
	}

	override method void doUntil(f) {
		var index = 0;
		var done = false;
		while { index < contentsSize && !done } {
			done = f(contents.get(index));
			index = index + 1;
		}
	}
	
	method size() {
		contentsSize
	}
}
