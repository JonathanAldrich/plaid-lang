package plaid.io;

state FileCharInputStream<Character> case of InputStream<Character>
{
	var javaFileCharInputStream; // file handle acting as bridge between io.File and plaid
	
	method readChar()
	{
		val potentialChar = javaFileCharInputStream.read();
		
		ifElse (potentialChar == -1) 
		{
			printLine("EOF!");
		}{
			printLine(potentialChar);
		};
	}
	
	method readUntil(f)//TODO: Change to "real" functional style
	{
		while{ !f(javaFileInputStream.read()); }
		{
			//handle depleted stream case, perhaps perform an if check?
		};
	}
	
	
	method void close()
	{
		javaFileCharInputStream.close();//close file, switch to depletedstream state
		this<-DepletedStream<Int8>;
	}
}