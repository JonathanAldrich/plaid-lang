/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package plaid.lang;

state NativeNumber case of Number = {
	
	val nativeVal;

	method immutable Boolean nativeEquals(other) { nativeVal.equals(other.nativeVal) }

	method immutable Int8 asInt8() { plaid.runtime.NumericSupport.asInt8(nativeVal) }
	method immutable Int16 asInt16() { plaid.runtime.NumericSupport.asInt16(nativeVal) }
	method immutable Int32 asInt32() { plaid.runtime.NumericSupport.asInt32(nativeVal) }
	method immutable Int64 asInt64() { plaid.runtime.NumericSupport.asInt64(nativeVal) }
	method immutable Integer asInteger() { plaid.runtime.NumericSupport.asInteger(nativeVal) }
	method immutable Float32 asFloat32() { plaid.runtime.NumericSupport.asFloat32(nativeVal) }
	method immutable Float64 asFloat64() { plaid.runtime.NumericSupport.asFloat64(nativeVal) }
	method immutable Decimal asDecimal() { plaid.runtime.NumericSupport.asDecimal(nativeVal) }
	method immutable Rational asRational() { plaid.runtime.NumericSupport.asRational(nativeVal) }
} with Printable {
	method immutable String toString() { nativeVal.toString() }
} with Hashable {
	method immutable Int32 hash() { nativeVal.hashCode() }
}