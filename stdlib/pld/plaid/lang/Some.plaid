/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 package plaid.lang;
 
 state Some case of Option {
    val value;
    
    method getValue() {
        this.value;
    }

    method /*Option[R]*/ map/*<R>*/(/*T -> R*/f) {
        new Some { val value = f(value); }
    }

    method /*Option[R]*/ flatMap/*<R>*/(/*T -> Option<R>*/f) {
        f(value)
    }

    method getOrElse(alt) {
        this.value
    }

    method hasValue() {
        true
    }
    
    method immutable String toString() {
    	"Some(" + this.value.toString() + ")"
    }
    
    method immutable Boolean ==(immutable Option other)[ immutable Some] {
    	match (other) {
    		case Some { this.value == other.value }
    		case None { false }
    	}
    }
 }