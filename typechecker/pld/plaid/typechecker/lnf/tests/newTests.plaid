package plaid.typechecker.lnf.tests;

import plaid.ast.*;

val () -> void newTests = fn() => {
	val qiList = makeEmptyList(); qiList.add("N");
	val unique NewInstance n = makeNewInstance(makeToken(), makeQI(makeToken(), qiList, new None));
	rewrite(n);
	
	val decls = makeEmptyList();
	decls.add(makeFieldDecl(makeToken(),
							makeID(makeToken(),"f"), 
							makeDereference(makeToken(),makeID(makeToken(),"a"), makeID(makeToken(),"b")),
							false, false, new FieldType));
	decls.add(makeFieldDecl(makeToken(),
							makeID(makeToken(),"g"), 
							makeDereference(makeToken(),makeID(makeToken(),"c"), makeID(makeToken(),"d")),
							false, false, new FieldType));
	val initState = makeDeclList(makeToken(),decls);
	val unique NewInstance complex = makeNewInstance(makeToken(), makeQI(makeToken(), qiList, createSome(initState)));
	rewrite(complex);
};