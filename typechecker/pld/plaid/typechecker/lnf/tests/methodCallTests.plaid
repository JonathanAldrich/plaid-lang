package plaid.typechecker.lnf.tests;

import plaid.ast.*;

val () -> void methodCallTests = fn() => {
	val args = makeEmptyList();
	args.add(makeID("y"));
	args.add(makeID("z"));
	val unique Expression callBare = makeMethodCall(makeID("x"), makeID("m"), args);
	rewrite(callBare);
	
	
	val args2 = makeEmptyList();
	args2.add(makeDereference(makeID("a"), makeID("b")));
	args2.add(makeDereference(makeID("c"), makeID("d")));
	val recv2 = makeDereference(makeID("x"), makeID("y"));
	val unique Expression callComplex = makeMethodCall(recv2, makeID("m"), args2);
	rewrite(callComplex);
	
	
	val args3 = makeEmptyList();
	args3.add(makeID("x"));
	val unique Expression print = makeMethodCall(makeDereference(makeDereference(makeID("lang"), makeID("System")), makeID("out")), makeID("println"), args3);
	rewrite(print);
};