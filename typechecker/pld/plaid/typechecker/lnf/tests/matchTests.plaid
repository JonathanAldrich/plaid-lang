package plaid.typechecker.lnf.tests;

import plaid.ast.*;

val () -> void matchTests = fn() => {
	val cases = makeEmptyList();
	val qid = makeEmptyList(); qid.add("testqi");
	cases.add(makeCase(makeToken(), createSome(makeQI(makeToken(),qid,new None)), new None, makeID(makeToken(),"y")));
	cases.add(makeDefaultCase(makeToken(), makeID(makeToken(),"z")));
	val m = makeMatch(makeToken(), makeID(makeToken(),"x"), cases);
	
	rewrite(m);
	
	
	val cases2 = makeEmptyList();
	val qid2 = makeEmptyList(); qid.add("testqi");
	cases2.add(makeCase(makeToken(), createSome(makeQI(makeToken(),qid2,new None)), new None, makeID(makeToken(),"y")));
	cases2.add(makeDefaultCase(makeToken(), makeID(makeToken(),"z")));
	val m2 = makeMatch(makeToken(), makeDereference(makeToken(),makeID(makeToken(),"a"), makeID(makeToken(),"b")), cases2);
	
	rewrite(m2);
};	