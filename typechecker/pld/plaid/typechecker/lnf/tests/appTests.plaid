package plaid.typechecker.lnf.tests;

import plaid.ast.*;

val () -> void appTests = fn() => {
	val args = makeEmptyList();
	args.add(makeID(makeToken(),"y"));
	args.add(makeID(makeToken(),"z"));
	val unique Expression appBare = makeApplication(makeToken(),makeID(makeToken(),"x"), args);
	rewrite(appBare);
	
	
	val args2 = makeEmptyList();
	args2.add(makeDereference(makeToken(),makeID(makeToken(),"a"), makeID(makeToken(),"b")));
	args2.add(makeDereference(makeToken(),makeID(makeToken(),"c"), makeID(makeToken(),"d")));
	val f2 = makeDereference(makeToken(),makeID(makeToken(),"x"), makeID(makeToken(),"y"));
	val unique Expression appComplex = makeApplication(makeToken(),f2, args2);
	rewrite(appComplex);
};