package plaid.typechecker.lnf.tests;

import plaid.ast.*;
import plaid.testing.*;
import plaid.typechecker.lnf.*;
import java.lang.System;

val varTests = fn(unique Tester tester) => {
	var newAst = unit;
	var oldAst = unit;
	var goalAst = unit;
	val unique NewLetNormalFormVisitor lnfVisitor = new NewLetNormalFormVisitor;
	
	//testName("lnf-var");
	oldAst = makeID(makeToken(),"x");
	newAst = oldAst.accept(lnfVisitor).first();
	goalAst = makeTake(makeToken(),makeTempID(makeToken(),"t1"),makeID(makeToken(),"x"),
					   makeTempID(makeToken(),"t1"), false);
	match (newAst == goalAst) {
		case True {
			tester.testPassed(true);
		}
		case False {
			tester.testPassed(false);
			printErrorASTs(oldAst,newAst,goalAst);
		}
	}
};