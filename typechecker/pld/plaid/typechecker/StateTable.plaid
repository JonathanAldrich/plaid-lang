package plaid.typechecker;

import plaid.ast.types.StateType;

state StateTable {
	//My favorite plaid hack so far - killer initializer - put unit state into initial table
	val /*Map<ID,StateType>*/ states = (fn () => { 
		val temp = HashMap.new();
		val u = new ID { val name = "unit"; };
		temp.put(u, new StateType { val name = u; val superType = new None; });
		temp;
	}) ();
	
	method put(/*ID*/ name, /*StateType*/ type) {
		states.put(name,type);
	}
	
	method /*Option StateType*/ get(/*ID*/ name) {
		ifElse (states.containsKey(name) )
			{ new Some { val value = states.get(name); } }
			{ new None }
	}
	
	method printTable() {
        val iter = states.values().iterator();
        while { iter.hasNext(); }{
            java.lang.System.out.print(iter.next().toString());
        };
	}
	
	
}