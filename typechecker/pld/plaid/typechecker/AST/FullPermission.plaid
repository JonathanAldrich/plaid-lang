package plaid.typechecker.AST;

state FullPermission case of Permission {
	override method isWritable() {
		true;
	}

	override method split(p2) {
		match(p2) {
			// full => full/pure
			case FullPermission {
				(p2, new PurePermission)
			}
			// full => shared/shared
			case SharedPermission {
				(p2, p2)
			}
			// full => immutable/immutable
			case ImmutablePermission {
				(p2, p2)
			}
			// full => pure/full
			case PurePermission {
				(p2, this)
			}
			// full => none/full
			case NonePermission {
				(p2, this)
			}
			default {
				new None;
			}
		};
	}
	
	override method ==(p2) {
		match(p2) {
			case FullPermission {
				true;
			}
			default {
				false;
			}
		};
	}
	
	override method merge(p2) {
		ifElse (p2 == UNIQUE) {
			p2;
		}{
			this;
		};
	}
}