package plaid.typechecker.AST.visitor.helper;
import  plaid.typechecker.helper.MapCell;
import  plaid.typechecker.AST.visitor.MyList;
import  plaid.typechecker.AST.visitor.MyNil;
import  java.lang.System;

state Context {

	val list = new MyList {var head = new MyNil;};
	
	method put(x, permType){
		var mapCell = new MapCell{
			var key = x;
			var value = permType;
		};
		list.append(mapCell);
	}
	
	
	
	method get(x){
		var permType = 0;
		list.map(fn (cell) => {
			var key = cell.key;
			var value = cell.value;
			if (x.isSame(key)) { 
				permType = cell.value;
			};  
		});
		permType;
	}
	
	method copy(){
		var copiedList = new MyList {var head = new MyNil;};
		list.map(fn (cell) => {
			copiedList.append(cell);  
		});
		new Context {val list = copiedList;};
	}
	
	method demote(){
	
	}
}