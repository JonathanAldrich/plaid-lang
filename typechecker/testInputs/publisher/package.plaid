/**
 * Copyright (c) 2011 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */
 
package testInputs.publisher;
 
state Data {
	val immutable String data;
}
 
state UnpublishedData case of Data {
	
	method void publish(immutable String >> void stamp)
										 [unique UnpublishedData >> immutable PublishedData] 
	{
		this <- PublishedData { val immutable String verifiedCode = stamp; }
	} 		
}

state PublishedData case of Data {
	val immutable String verifiedCode;
}

state PublishingAuthority {
	
	val immutable String name;
	var immutable Integer count = 0;
	
	method void submit(unique UnpublishedData >> immutable PublishedData data)[unique PublishingAuthority] {
		this.count = this!count + 1; 
		val immutable String newStamp = this!name + this!count.toString();
		data.publish(newStamp);
	}
}

method void main()[void >> void] {
	val unique UnpublishedData d = new UnpublishedData { val immutable String data = "this is some test data"; };
	val unique PublishingAuthority pa = new PublishingAuthority { val immutable String name = "ACM"; };
	pa.submit(d);
	//pa.submit(d);  //adding this causes a failure
}
