/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package coreExamples.freezeTests;

import java.lang.System;

state FreezeTest {
	var x = 5;
}

state Top { }

state A case of Top { }

state B case of Top { }

state ChangeTest {
	val toChange = new A;
}

val topState = createSome(5);

state ComposeFreeze = FreezeTest with freeze(topState)

method main() {
	val test = new FreezeTest;
	test.x = 7;
	val testFrozen = new freeze(test);
	match(testFrozen.x == 7) {
		case True {
			System.out.println("Freeze Succeeded!");
		}
		case False {
			System.out.println("Freeze Failed!");
		}
	};
	
	val ct = new ComposeFreeze;
	
	match (ct) {
		case Some {
			System.out.println("Freeze Succeeded!");
		}
		default {
			System.out.println("Freeze Failed!");
		}
	};
	
	ct <- None;
	match (n) {
		case Some {
			System.out.println("state change nested failed!");
		}
		case None { 
			System.out.println("state change nested Succeeded!");
		}
		default {
			System.out.println("something strange went wrong");
		}
	};
	
	val c = new ChangeTest;
	val a = new freeze(c);
	c.toChange <- B;
	match (c.toChange) {
		case A {
			System.out.println("State change Failed!");
		}
		case B {
			System.out.println("State change succeeded!");
		}
	};
	match (a.toChange) {
		case A {
			System.out.println("Alias Failed!");
		}
		case B {
			System.out.println("Aliased!");
		}
	};
}
