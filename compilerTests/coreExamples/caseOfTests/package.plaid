/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package coreExamples.caseOfTests;

state A { }

state B case of A { }

state C case of B { }

state D { }

state E case of D = B

state F case of D { }

typedef state T = B with F

method main() {
	val x = new A;
	val y = new B;
	val z = new C;
	val w = new E;
	val v = new T;
	
	print("normal matching: ");
	match (y) {
		case E { 
			printLine("doesn't work - matched D")
		}
		case C { 
			printLine("doesn't work - matched C")
		}
		case B {
           printLine("works")
        }
        default {
           printLine("doesn't work - didn't match B")
		}
	};
	
	print("matching a supertype: ");
	match (z) {
		case E { 
			printLine("doesn't work - matched D")
		}
		case B {
			printLine("works")
		}
		default {
           printLine("doesn't work")
		}
	};
	
	print("matching a nested type: ");
	match (w) {
		case B {
			printLine("works")
		}
		default {
           printLine("doesn't work")
		}
	};
	
	print("matching parts of a typedef: ");
	match (v) {
		case B {
			match (v) {
				case F {
					printLine("works")
				}
				default {
					printLine("doesn't work - did not match F")
				}
			}
		}
		default {
         	match (v) {
				case F {
					printLine("doesn't work - did not match B")
				}
				default {
					printLine("doesn't work - did not match B or F")
				}
			}  
           
		}
	};
	
	print("matching a typedef - should be an exception: ");
	match (v) {
		case T {
			printLine("doesn't work - matched tag for T even though it should not")		
		}
		default {
			printLine("worked - didn't match tag for T")
		}
	};
}

