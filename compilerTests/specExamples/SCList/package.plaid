/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

package coreExamples.definedInTests;

//NOTE : These tests that can only be verified by inspection of the runtime

state A { val a = 1; method y() { 1 } }
state B { val b = 2; method z() { 2 } }
state BPrime case of B { val bprime = 3; }
state C = A with B
state D = A with BPrime
state E = A with { val e = 5; }
state F = A with { method f() {6} }
state G = { method g() {8} } with {val seven = 7; }
state H = { method h() {9} } with A
state I = { method i() {10} } with BPrime
state J = { method j() {11} } with {method jtwo() {12} }
state K { val myState = new D ; }
state K2 = {val myState = new D ; }	
state TestOne = A with I with { val eight = 8;} with J with G
state TestTwo = A { val s = 1; } with J { val t = 2; } with G { val q = 3; }

method main() {
	val cState = new C;
	val dState = new D;
	val eState = new E;
	val fState = new F;
	val gState = new G;
	val hState = new H;
	val iState = new I;
	val jState = new J;
	val cState2 = new A with B;
	val dState2 = new A with BPrime;
	val eState2 = new A with { val e = 5; };
	val fState2 = new A with { method f() {6} };
	val gState2 = new { method g() {8} } with {val seven = 7; };
	val hState2 = new { method h() {9} } with A;
	val iState2 = new { method i() {10} } with BPrime;
	val jState2 = new { method j() {11} } with {method jtwo() {12} };
		
	val kState = new K;
	printLine("This should be 3: "+kState.myState.bprime);
	val kState2 = new K2;
	printLine("This should be 3: "+kState2.myState.bprime);
	val kState3 = new { val myState = new D ; } with { val myState2 = new G ; };
	printLine("This should be 3: "+kState3.myState.bprime);
	val kState4 = new { val myState = new D ; };
	printLine("This should be 3: "+kState4.myState.bprime);
	
	val t1 = new TestOne;
	val t2 = new TestTwo;
	printLine("This should be 3: "+t2.q);
		
	val test = new A with I with { val eight = 8;} with J with G;
	val test2 = new A { val s = 1; } with J { val t = 2; } with G { val q = 3; };
	printLine("This should be 3: "+test2.q);
	val test3 = new { val x = gState2.seven; } with { val g = eState2.e; };
	printLine("This should be 5: "+test3.g);
}