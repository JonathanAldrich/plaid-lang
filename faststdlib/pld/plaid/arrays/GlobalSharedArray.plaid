/**
 * Copyright (c) 2010 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 package plaid.arrays;

@builtin
 state GlobalSharedArray {
     method void initialize(immutable GlobalSharedArrayOperations ops)[ unique GlobalSharedArray this ];

     method void setUnique(immutable Integer index, unique Object >> void obj) [ unique GlobalSharedArray this ];
     method void setShared(immutable Integer index, unique Object >> void obj) [ shared GlobalSharedArray this ];
     method void setLocalShared(immutable Integer index, unique Object >> void obj) [ local shared GlobalSharedArray this ];

     method immutable Boolean doUnique(immutable Integer index, immutable GlobalSharedArrayOperations ops) [ unique GlobalSharedArray this ];
     method immutable Boolean doShared(immutable Integer index, immutable GlobalSharedArrayOperations ops) [ shared GlobalSharedArray this ];     
     method immutable Boolean doLocalShared(immutable Integer index, immutable GlobalSharedArrayOperations ops) [ local shared GlobalSharedArray this ];     

     method immutable Boolean doUniqueData1(immutable Integer index, immutable GlobalSharedArrayOperations ops, immutable Object data) [ unique GlobalSharedArray this ];
     method immutable Boolean doSharedData1(immutable Integer index, immutable GlobalSharedArrayOperations ops, immutable Object data) [ shared GlobalSharedArray this ];     
     method immutable Boolean doLocalSharedData1(immutable Integer index, immutable GlobalSharedArrayOperations ops, immutable Object data) [ local shared GlobalSharedArray this ];     

     method immutable Boolean doUniqueData2(immutable Integer index, immutable GlobalSharedArrayOperations ops, immutable Object data1, immutable Object data2) [ unique GlobalSharedArray this ];
     method immutable Boolean doSharedData2(immutable Integer index, immutable GlobalSharedArrayOperations ops, immutable Object data1, immutable Object data2) [ shared GlobalSharedArray this ];     
     method immutable Boolean doLocalSharedData2(immutable Integer index, immutable GlobalSharedArrayOperations ops, immutable Object data1, immutable Object data2) [ local shared GlobalSharedArray this ];     

 }